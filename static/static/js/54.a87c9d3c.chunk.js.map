{"version":3,"sources":["lib/components/messagebar/messagebar.js","lib/components/formContainer/formContainer.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","components/request/FailConfirm.js"],"names":["React","memo","mb","useSelector","state","messagebar","dispatch","useDispatch","MessageContainer","msgClass","icon","className","Icon","messages","map","e","i","key","onClick","hideMessageBar","console","log","show","messageType","SUCCESS","ERROR","INFO","WARNING","getMessageBar","props","Card","CardHeader","title","CardContent","children","ref","classes","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","_props$component","component","Component","padding","paddingBottom","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","display","color","content","alignItems","flex","marginRight","alignSelf","marginTop","useStyles","makeStyles","theme","textAlign","spacing","FailConfirm","referenceNumber","useParams","useEffect","src","textColor"],"mappings":"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","file":"static/js/54.a87c9d3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { ms } from 'date-fns/locale';\r\nimport { SUCCESS, ERROR, INFO, WARNING } from '../../redux/messagebar/messagebarType';\r\nimport './messagebar.css';\r\nimport { Icon } from '@material-ui/core';\r\nimport { hideMessageBar } from '../../redux';\r\n\r\nfunction Messagebar() {\r\n    const mb = useSelector(state => state.messagebar);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const MessageContainer = ({ msgClass, icon }) => {\r\n        return (\r\n            <>\r\n                <div className={msgClass}>\r\n                    <div className=\"message-icon\"><Icon>{icon}</Icon></div>\r\n\r\n                    <div className=\"message-list\">\r\n                        <ul>{\r\n                            mb.messages.map((e, i) => {\r\n                                return <li key={i}>{e}</li>\r\n                            })\r\n                        }</ul>\r\n                    </div>\r\n                    <div className=\"close-icon\" onClick={() => {\r\n                        dispatch(hideMessageBar())\r\n                    }}>\r\n                        <Icon>clear</Icon>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    const getWarningMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-warning' icon='warning' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getInfoMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-info' icon='info' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getErrorMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-error' icon='error' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getSuccessMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-success' icon='check' />\r\n            </>)\r\n    }\r\n\r\n    const getMessageBar = () => {\r\n        console.log('IN componenet');\r\n        switch (mb.messageType) {\r\n            case SUCCESS: return getSuccessMessage();\r\n            case ERROR: return getErrorMessage();\r\n            case INFO: return getInfoMessage();\r\n            case WARNING: return getWarningMessage();\r\n            default:\r\n                return <></>;\r\n        }\r\n\r\n    }\r\n    console.log(mb);\r\n    return (\r\n        <>\r\n            {mb.show && mb.show === true && getMessageBar()}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Messagebar);\r\n","import React from 'react'\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport './formContainer.css';\r\nimport Messagebar from '../messagebar/messagebar';\r\nfunction FormContainer(props) {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader title={props.title} className=\"page-header\" />\r\n                <CardContent>\r\n                    <Messagebar />\r\n                    {props.children}\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(FormContainer);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { useEffect, useState ,Fragment} from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport FormContainer from '../../lib/components/formContainer/formContainer';\r\nimport {useParams} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from \"@material-ui/core/Typography\"; \r\nimport { Link} from \"react-router-dom\"; \r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nlet confirmationForm ={\r\n    referenceNumber:''\r\n}\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n   textAlign:'center',\r\n    marginTop: theme.spacing(35),\r\n  \r\n}\r\n}));\r\nexport default function FailConfirm() {\r\n\r\nlet { referenceNumber } = useParams();\r\nconst classes = useStyles();\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    console.log(\"referenceNumber ::\",referenceNumber);\r\n},[]\r\n);\r\nreturn (\r\n    <Fragment >\r\n    \r\n    <div className={classes.root}>\r\n   \r\n   <img src=\"C:\\Users\\paraminfo.anisha\\Documents\\greenTick.png\"></img>\r\n   <h1>Payment Failed</h1>\r\n  <p > Your payment has been Failed</p>\r\n<Typography  variant=\"body2\" component=\"h4\" >{`An Email Confirmation will be sent to shortly with booking details`}</Typography>\r\n  \r\n<Typography  variant=\"body3\" component=\"h5\" >Booking number#{`${referenceNumber}`}</Typography>\r\n <p>Check your status by going to <Link textColor=\"green\"> My Booking </Link> page </p>\r\n <p>Reinitialise to proceed for payment</p> \r\n\r\n \r\n \r\n </div>\r\n\r\n     </Fragment>);\r\n}"],"sourceRoot":""}