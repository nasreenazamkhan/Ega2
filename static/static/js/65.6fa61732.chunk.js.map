{"version":3,"sources":["service/CommonService.js","service/BookingService.js","components/request/Confirmation.js"],"names":["postToExternalSite","dataToPost","url","console","log","form","window","document","createElement","setAttribute","dataArr","Object","keys","i","length","appendChild","createHiddenElement","body","submit","name","value","hiddenField","downloadReceipt","referenceNumber","remoteUrl","endpointContants","open","BookingService","cancellationRequest","data","obj","postHttp","catch","error","updateRequestTruckType","reference","getHttp","containerData","bookingNumber","getHttpAsync","declaration","containerNumber","useStyles","makeStyles","theme","root","textAlign","marginTop","spacing","Confirmation","props","classes","success","history","useHistory","useEffect","className","src","variant","component","textColor","onClick","push","CommonService","style","color","reInitialise","then","res","dataVal","serviceOwnerID","dataItems","serviceID","serviceChannel","licenseKey","customerReferenceNumber","serviceDescription","responseURL","serviceCost","soTransactionID","documentationCharges","signature","popup","buEncryptionMode","gatewayUrl"],"mappings":"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","file":"static/js/65.6fa61732.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as endpointContants from '../utils/ptmsEndpoints';\r\nimport { getHttp } from '../lib/common/HttpService';\r\n\r\nclass CommonService{\r\n\r\n   postToExternalSite=(dataToPost, url)=>{\r\n       console.log(\"dataToPost ::\",dataToPost);\r\n        const form = window.document.createElement('form');\r\n        form.setAttribute('method', 'post');\r\n        form.setAttribute('action', url);\r\n        const dataArr = Object.keys(dataToPost);\r\n        for (let i = 0; i < dataArr.length; i++) {\r\n            form.appendChild(this.createHiddenElement(dataArr[i], dataToPost[dataArr[i]]));\r\n        }\r\n        window.document.body.appendChild(form);\r\n        form.submit();\r\n    }\r\n\r\n    createHiddenElement=(name, value)=> {\r\n        const hiddenField = document.createElement('input');\r\n        hiddenField.setAttribute('name', name);\r\n        hiddenField.setAttribute('value', value);\r\n        hiddenField.setAttribute('type', 'hidden');\r\n        return hiddenField;\r\n    }\r\n\r\n    downloadReceipt = (referenceNumber) => {\r\n        \r\n        const remoteUrl =`${endpointContants.downloadReceipt}`+\"/\"+`${referenceNumber}`;\r\n\r\n        console.log(\"remoteUrl::\",remoteUrl);\r\n      \r\n         let obj = { url: remoteUrl };\r\n \r\n \r\n         window.open(remoteUrl);\r\n    }\r\n}\r\n\r\nexport default new CommonService()","import { postHttp } from '../lib/common/HttpService';\r\nimport * as endpointContants from '../utils/ptmsEndpoints';\r\nimport { getHttp, getHttpAsync } from '../lib/common/HttpService';\r\nimport { checkForExistingTrip,updateRequestTruckType } from './../utils/ptmsEndpoints';\r\n\r\n\r\n\r\nclass BookingService {\r\n\r\n    fetchContainerCount() {\r\n\r\n        const remoteUrl = endpointContants.fetchContainerCount;\r\n        let obj = { url: remoteUrl };\r\n        return getHttp(obj, false);\r\n\r\n\r\n    }\r\n\r\n    fetchContainerSummaryAndPayment(containerData) {\r\n\r\n        const remoteUrl = endpointContants.fetchContainerSummaryAndPayment;\r\n        let obj = {\r\n            url: remoteUrl,\r\n            body: containerData\r\n        };\r\n\r\n        return postHttp(obj, true).catch(error => {\r\n\r\n            return error;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveRequest(data) {\r\n\r\n        const remoteUrl = endpointContants.saveRequest;\r\n\r\n        let obj = {\r\n            url: remoteUrl,\r\n            body: data\r\n        };\r\n\r\n        return postHttp(obj, true).catch(error => {\r\n\r\n            return error;\r\n        });\r\n\r\n    }\r\n\r\n    reInitialise(data) {\r\n        const remoteUrl = `${endpointContants.reInitialise}/${data}`;\r\n\r\n        let obj = {\r\n            url: remoteUrl,\r\n           \r\n        };\r\n\r\n        return postHttp(obj, true).catch(error => {\r\n\r\n            return error;\r\n        });\r\n\r\n    }\r\n\r\n    getBookingByNumber(bookingNumber) {\r\n        const remoteUrl = `${endpointContants.apiBaseUrl}/requestDetails/booking/${bookingNumber}`;\r\n        let obj = { url: remoteUrl };\r\n        return getHttpAsync(obj, true);\r\n    }\r\n\r\n    getRequestByDeclaration(declaration) {\r\n        const remoteUrl = `${endpointContants.apiBaseUrl}/requestDetails/bookingByDeclaration/${declaration}`;\r\n        let obj = { url: remoteUrl };\r\n        return getHttpAsync(obj, true);\r\n    }\r\n\r\n    getContainerRequest(containerNumber) {\r\n        const remoteUrl = `${endpointContants.apiBaseUrl}/requestDetails/containers/${containerNumber}`;\r\n        let obj = { url: remoteUrl };\r\n        return getHttpAsync(obj, true);\r\n    }\r\n\r\n    cancellationRequest = (data) => {\r\n        let remoteUrl = `${endpointContants.apiBaseUrl}/requestContainerDetails/cancel`;\r\n        let obj = { url: remoteUrl, body: data };\r\n\r\n        return postHttp(obj, true).catch(error => {\r\n            return error;\r\n        });\r\n\r\n    };\r\n\r\n    updateRequestTruckType = (reference,data) => {\r\n        let remoteUrl = `${updateRequestTruckType}/${reference}`;\r\n        let obj = { url: remoteUrl, body: data };\r\n\r\n        return postHttp(obj, true).catch(error => {\r\n            return error;\r\n        });\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default new BookingService()","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from '@material-ui/core/Link';\r\nimport CommonService from \"../../service/CommonService\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BookingService from \"../../service/BookingService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'center',\r\n    marginTop: theme.spacing(5),\r\n\r\n  }\r\n}));\r\nexport default function Confirmation(props) {\r\n\r\n\r\n  const classes = useStyles();\r\n  const referenceNumber = props.referenceNumber;\r\n  const success = props.success;\r\n\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(\"referenceNumber ::\", referenceNumber);\r\n  }, []\r\n  );\r\n  return (\r\n    <>\r\n      {\r\n        success === 'Y' &&\r\n\r\n        <div className={classes.root}>\r\n\r\n          <img src=\"./success.svg\"></img>\r\n          <h1>Success</h1>\r\n          <p > Your payment has been made</p>\r\n          <Typography variant=\"body2\" component=\"h4\" >{`An Email Confirmation will be sent to shortly with booking details`}</Typography>\r\n\r\n          <Typography variant=\"body3\" component=\"h5\" >Booking number#{`${referenceNumber}`}</Typography>\r\n          <p>Check your status by going to <Link textColor=\"green\" onClick={() => {\r\n            history.push(\"/viewRequest\");\r\n          }}> My Booking </Link> page </p>\r\n          <p><Link onClick={() => {\r\n            CommonService.downloadReceipt(referenceNumber);\r\n          }}>Download Receipt</Link></p>\r\n\r\n\r\n\r\n        </div>\r\n      }\r\n      {\r\n\r\n\r\n\r\n        success === 'N' &&\r\n\r\n        <div className={classes.root}>\r\n\r\n          <img src=\"./failure.svg\" ></img>\r\n          <h1 style={{ color: \"#EA2428\" }}>Sorry,payment failed</h1>\r\n\r\n          <Typography variant=\"body2\" component=\"h4\" >{`Unfortunately, we encounter an error while processing your payment for the booking `}</Typography>\r\n\r\n          <Typography variant=\"body2\" component=\"h4\" >{`Please check your payment details and try again`}</Typography>\r\n          <br></br>\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={() => {\r\n            BookingService.reInitialise(referenceNumber)\r\n              .then((res) => {\r\n                console.log(\"response\");\r\n                const dataVal = {\r\n                  serviceOwnerID: res.data.dataItems[0].serviceOwnerID,\r\n                  serviceID: res.data.dataItems[0].serviceID,\r\n                  serviceChannel: res.data.dataItems[0].serviceChannel,\r\n                  licenseKey: res.data.dataItems[0].licenseKey,\r\n                  customerReferenceNumber:\r\n                    res.data.dataItems[0].customerReferenceNumber,\r\n                  serviceDescription:\r\n                    res.data.dataItems[0].serviceDescription,\r\n                  responseURL: res.data.dataItems[0].responseURL,\r\n                  serviceCost: res.data.dataItems[0].serviceCost,\r\n                  soTransactionID: res.data.dataItems[0].soTransactionID,\r\n                  documentationCharges:\r\n                    res.data.dataItems[0].documentationCharges,\r\n                  signature: res.data.dataItems[0].signature,\r\n                  popup: res.data.dataItems[0].popup,\r\n                  buEncryptionMode:\r\n                    res.data.dataItems[0].buEncryptionMode,\r\n                };\r\n                console.log(\"dataVal\", dataVal);\r\n                CommonService.postToExternalSite(\r\n                  dataVal,\r\n                  res.data.dataItems[0].gatewayUrl\r\n                );\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"error\");\r\n              });\r\n          }}> Try Again</Button>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n      }\r\n    </>\r\n  );\r\n\r\n}"],"sourceRoot":""}