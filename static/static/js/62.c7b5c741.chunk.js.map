{"version":3,"sources":["service/JobService.js","lib/components/appComponent/SearchInput.tsx","components/admin/AdminDashBoard.js"],"names":["JobService","fromDate","toDate","obj","url","endpointContants","getHttp","jobRefNo","body","postHttp","catch","error","remarks","refNo","paymentRefNo","updateList","useStyles","makeStyles","root","padding","display","alignItems","width","flexGrow","marginTop","input","marginLeft","theme","spacing","flex","iconButton","divider","height","margin","SearchInput","SearchInputParam","classes","useState","search","setSearch","type","setType","optionValues","typeOptions","component","className","value","defaultValue","onChange","e","changeValue","event","target","placeholder","defaultType","inputProps","onClick","searchClick","aria-label","orientation","id","select","changeType","variant","size","map","option","i","key","label","paper","maxWidth","splitScreen","flexDirection","leftPane","middlePane","rightPane","cardStyle","backgroundColor","cardStyle1","cardStyle2","types","React","memo","history","useHistory","expiredJobs","setExpiredJobs","setSearchValue","setSearchType","pendingTokenJobs","setPendingTokenJobs","pendingDocuments","setPendingDocuments","useEffect","loadContainerCount","a","fetchExpiredCountForDashBoard","then","response","console","log","data","dataItems","EXP","loadPendingTokenJobCount","fetchPendingTokenJobCount","PTOK","PMTTOK","INVSUBMT","PODUPL","container","direction","justify","xs","item","sm","md","searchDetail","push","handleSearchClick","style","fontSize","color","align","fontStyle","fontWeight","float"],"mappings":"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","file":"static/js/62.c7b5c741.chunk.js","sourcesContent":["import * as endpointContants from \"../utils/ptmsEndpoints\";\r\nimport { getHttp, postHttp } from \"../lib/common/HttpService\";\r\n\r\nclass JobService {\r\n  fetchSettlements(fromDate,toDate) {\r\n    const remoteUrl = `${endpointContants.fetchSettlements}?fromDate=${fromDate}&toDate=${toDate}`;\r\n\r\n    let obj = { url: remoteUrl };\r\n\r\n    return getHttp(obj, false);\r\n  }\r\n\r\n  fetchInvoice(jobRefNo) {\r\n    const remoteUrl = `${endpointContants.fetchInvoice}?jobRefNo=${jobRefNo}`;\r\n\r\n    let obj = { url: remoteUrl };\r\n\r\n    return getHttp(obj, false);\r\n  }\r\n\r\n  fetchInvoiceSubmittedJobs() {\r\n    const remoteUrl = `${endpointContants.fetchInvoiceSubmittedJobs}`;\r\n\r\n    let obj = { url: remoteUrl };\r\n\r\n    return getHttp(obj, false);\r\n  }\r\n\r\n  approveInvoice(jobRefNo) {\r\n    const remoteUrl = endpointContants.approveInvoice;\r\n\r\n    let obj = { url: remoteUrl, body: { jobRefNo: jobRefNo } };\r\n\r\n    return postHttp(obj, true).catch((error) => {\r\n      return error;\r\n    });\r\n  }\r\n\r\n  rejectInvoice(jobRefNo, remarks) {\r\n    const remoteUrl = endpointContants.rejectInvoice;\r\n\r\n    let obj = {\r\n      url: remoteUrl,\r\n      body: { jobRefNo: jobRefNo, remarks: remarks },\r\n    };\r\n\r\n    return postHttp(obj, true).catch((error) => {\r\n      return error;\r\n    });\r\n  }\r\n\r\n  fetchInvoiceApprovedJobs(fromDate, toDate) {\r\n    const remoteUrl = `${endpointContants.fetchInvoiceApprovedJobs}?fromDate=${fromDate}&toDate=${toDate}`;\r\n\r\n    let obj = { url: remoteUrl };\r\n\r\n    return getHttp(obj, false);\r\n  }\r\n\r\n  markJobAsPaid(jobRefNo,refNo) {\r\n    const remoteUrl = endpointContants.markJobAsPaid;\r\n\r\n    let obj = { url: remoteUrl, body: { jobRefNo: jobRefNo,paymentRefNo:refNo } };\r\n\r\n    return postHttp(obj, true).catch((error) => {\r\n      return error;\r\n    });\r\n  }\r\n\r\n  loadEmptyInContainers() {\r\n    const remoteUrl = endpointContants.loadEmptyInContainers;\r\n\r\n    let obj = { url: remoteUrl };\r\n\r\n    return getHttp(obj, false);\r\n  }\r\n\r\n  updateTokenInDetails(updateList) {\r\n    const remoteUrl = endpointContants.updateTokenInDetails;\r\n\r\n    let obj = { url: remoteUrl, body: updateList };\r\n\r\n    return postHttp(obj, true).catch((error) => {\r\n      return error;\r\n    });\r\n  }\r\n\r\n  fetchExpiredCountForDashBoard() {\r\n\r\n    const remoteUrl = endpointContants.countExpiredRequests ;\r\n     let obj = { url: remoteUrl };\r\n     return getHttp(obj, false);\r\n         \r\n           \r\n  }\r\n  \r\n  fetchPendingTokenJobCount() {\r\n    const remoteUrl = endpointContants.countPendingTokenJobs ;\r\n     let obj = { url: remoteUrl };\r\n     return getHttp(obj, false);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new JobService();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider, Grid, IconButton, InputBase, MenuItem, Paper, TextField } from \"@material-ui/core\";\r\n\r\nimport { Directions, Search } from \"@material-ui/icons\";\r\nimport './containerCard.css';\r\nimport theme from \"../../common/theme/theme\";\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 700,\r\n        flexGrow: 1,\r\n        marginTop:15\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\ninterface SearchInputParam {\r\n    placeholder?: string,\r\n    defaultType?: string,\r\n    defaultValue?: string,\r\n    searchClick?(value: any): void,\r\n    changeType?(value?: any): string,\r\n    changeValue?(value?: any): string,\r\n    optionValues?:any[]\r\n\r\n}\r\n\r\n// const types = [\r\n//     {\r\n//         value: 'DECLARATION',\r\n//         label: 'By Declaration Number',\r\n//     },\r\n\r\n//     {\r\n//         value: 'BOOKING',\r\n//         label: 'By Booking Number',\r\n//     },\r\n//     {\r\n//         value: 'CONTAINER',\r\n//         label: 'By Container Number',\r\n//     }\r\n// ];\r\n\r\n\r\nconst SearchInput: React.FC<SearchInputParam> = (SearchInputParam) => {\r\n    const classes = useStyles();\r\n    const [search, setSearch] = useState();\r\n    const [type, setType] = useState();\r\n    const [typeOptions, setTypeOptions] = useState(SearchInputParam.optionValues);\r\n    const handleInputValueChange = (event: any) => {\r\n        setSearch(event.target.value);\r\n        return event.target.value;\r\n    }\r\n\r\n    const handleTypeChange = (event: any) => {\r\n        setType(event.target.value);\r\n        return event.target.value;\r\n    }\r\n    // useEffect(() => {\r\n\r\n    //     console.info(\"BEFORE \", JSON.stringify(type))\r\n\r\n    // }, [])\r\n    // const handleTypeChange = (event?: any) => {\r\n    //     SearchInputParam.getType(event.target.value);\r\n    //     setType(event.target.value);\r\n    //     console.log(\"INFO ++++ \",type)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Paper component=\"form\" className={classes.root}>\r\n          \r\n            <InputBase  value={search??SearchInputParam.defaultValue} className={classes.input} onChange={(e) => SearchInputParam.changeValue(handleInputValueChange(e))} placeholder={`Search by ${type ?? SearchInputParam.defaultType}`} inputProps={{ 'aria-label': `Search by ${type ?? SearchInputParam.defaultType}` }} />\r\n                \r\n                {/* <InputBase value={search??SearchInputParam.defaultValue} className={classes.input} onChange={(e) => handleSearchInput(e, SearchInputParam?.getValue(e.target.value))} placeholder={`Search by ${type ?? SearchInputParam.defaultType}`} inputProps={{ 'aria-label': `Search by ${type ?? SearchInputParam.defaultType}` }} /> */}\r\n                {/* <InputBase value={search??SearchInputParam.defaultValue} className={classes.input} onChange={(e) => handleSearchInput(e,SearchInputParam.getType(e.target.value))} placeholder={`Search by ${type ?? SearchInputParam.defaultType}`} inputProps={{ 'aria-label': `Search by ${type ?? SearchInputParam.defaultType}` }} /> */}\r\n                <IconButton onClick={() => SearchInputParam.searchClick({\"serviceType\":type??SearchInputParam.defaultType,\"serviceNumber\":search})} className={classes.iconButton} aria-label=\"search\">\r\n                    <Search />\r\n                </IconButton>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n                {/*   <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\r\n                    <Directions />\r\n                </IconButton> */}\r\n                <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    value={type??SearchInputParam.defaultType}\r\n                    onChange={(e) => SearchInputParam.changeType(handleTypeChange(e))}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                >\r\n                    {typeOptions.map((option, i) => (\r\n                        <MenuItem key={i} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </Paper>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SearchInput;","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IconButton, Card, Paper, CardContent, CardMedia, Grid, InputLabel } from \"@material-ui/core\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport JobService from \"../../service/JobService\";\r\nimport SearchInput from \"../../lib/components/appComponent/SearchInput\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 1200,\r\n  },\r\n  splitScreen: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  leftPane: {\r\n    width: \"33%\",\r\n  },\r\n  middlePane: {\r\n    width: \"32%\",\r\n  },\r\n  rightPane: {\r\n    width: \"35%\",\r\n  },\r\n  cardStyle: {\r\n    width: \"350px\",\r\n    height: \"120px\",\r\n    marginTop: 30,\r\n    backgroundColor: \"#FF7575\"\r\n  },\r\n\r\n  cardStyle1: {\r\n    width: \"350px\",\r\n    height: \"120px\",\r\n    marginTop: 30,\r\n    backgroundColor: \"#FFBA42\"\r\n  },\r\n\r\n  cardStyle2: {\r\n    width: \"350px\",\r\n    height: \"120px\",\r\n    marginTop: 30,\r\n    backgroundColor: \"#59B7FF\"\r\n  },\r\n\r\n\r\n}))\r\n\r\nconst types = [\r\n    {\r\n        value: 'DECLARATION',\r\n        label: 'By Declaration Number',\r\n    },\r\n\r\n    {\r\n        value: 'BOOKING',\r\n        label: 'By Booking Number',\r\n    },\r\n    {\r\n        value: 'CONTAINER',\r\n        label: 'By Container Number',\r\n    }\r\n];\r\n\r\n\r\nfunction AdminDashBoard() {\r\n\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [expiredJobs, setExpiredJobs] = useState(null);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchType, setSearchType] = useState('');\r\n  const [pendingTokenJobs, setPendingTokenJobs] = useState(null);\r\n  const [pendingDocuments, setPendingDocuments] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadContainerCount = async () => {\r\n      JobService.fetchExpiredCountForDashBoard()\r\n        .then((response) => {\r\n          console.log(response.data.dataItems[0].EXP);\r\n          setExpiredJobs(response.data.dataItems[0].EXP);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\");\r\n        });\r\n    };\r\n\r\n    const loadPendingTokenJobCount = async () => {\r\n      JobService.fetchPendingTokenJobCount()\r\n        .then((response) => {\r\n          console.log(\"------\", response.data.dataItems[0].PTOK);\r\n          console.log(\"------**\",response.data.dataItems[0].PMTTOK);\r\n          setPendingTokenJobs(response.data.dataItems[0].PTOK+response.data.dataItems[0].PMTTOK);\r\n          setPendingDocuments(response.data.dataItems[0].INVSUBMT + response.data.dataItems[0].PODUPL)\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\");\r\n        });\r\n    };\r\n\r\n    loadContainerCount();\r\n    loadPendingTokenJobCount();\r\n  }, []);\r\n\r\n  const handleSearchClick = (e) => {\r\n    console.log(\"event\", e)\r\n    let searchDetail = {\"search\":e,\"from\":true}\r\n    history.push(\"/search-by-service\", searchDetail);\r\n  }\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" xs={12} >\r\n        {/* <Paper className={classes.paper}> */}\r\n\r\n        <Grid item container xs={12} sm={10} md={8}>\r\n          <SearchInput optionValues={types} changeValue={(e) => setSearchValue(e)} defaultType=\"DECLARATION\" changeType={(e) => setSearchType(e)} searchClick={(e) => handleSearchClick(e, searchValue, searchType)} ></SearchInput>\r\n        </Grid>\r\n\r\n      </Grid>\r\n      <Grid container xs={12} sm spacing={1}>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <Card className={classes.cardStyle}>\r\n            <CardContent>\r\n\r\n              <CardMedia>\r\n                <Grid container>\r\n                  <Grid item xs={6} style={{ fontSize: '45px', color: '#FFFFFF', align: 'center' }}>\r\n                    {expiredJobs}\r\n                  </Grid>\r\n                  <Grid item xs={6} >\r\n                    <InputLabel style={{ fontSize: '20px', color: '#FFFFFF' }}> Expired Jobs</InputLabel>\r\n                    <InputLabel style={{ fontSize: '13px', color: '#FFFFFF', fontStyle: 'italic', fontWeight: 'light' }}>Trucks not assigned</InputLabel>\r\n                    <IconButton onClick={() => {\r\n                      history.push(\"/expiredJobs\");\r\n                    }}> <KeyboardArrowRight\r\n                        style={{ color: \"white\", fontSize: \"30px\", float: \"right\" }}\r\n                      /></IconButton>\r\n\r\n\r\n\r\n\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </CardMedia>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <Card className={classes.cardStyle1}>\r\n            <CardContent>\r\n              <CardMedia>\r\n                <Grid container>\r\n                  <Grid item xs={6} style={{ fontSize: '45px', color: '#FFFFFF', align: 'center' }}>\r\n                    {pendingTokenJobs}\r\n                  </Grid>\r\n                  <Grid item xs={6} >\r\n                    <InputLabel style={{ fontSize: '20px', color: '#FFFFFF' }}> Update Token</InputLabel>\r\n                    <InputLabel style={{ fontSize: '13px', color: '#FFFFFF', fontStyle: 'italic', fontWeight: 'light' }}>Generate to start job</InputLabel>\r\n                    <IconButton onClick={() => {\r\n                      history.push(\"/assignToken\");\r\n                    }}> <KeyboardArrowRight\r\n                        style={{ color: \"white\", fontSize: \"30px\", float: \"right\" }}\r\n                      /></IconButton>\r\n\r\n\r\n\r\n\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </CardMedia>\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <Card className={classes.cardStyle2}>\r\n            <CardContent>\r\n              <CardMedia>\r\n                <Grid container>\r\n                  <Grid item xs={6} style={{ fontSize: '45px', color: '#FFFFFF', align: 'center' }}>\r\n                    {pendingDocuments}\r\n                  </Grid>\r\n                  <Grid item xs={6} >\r\n                    <InputLabel style={{ fontSize: '20px', color: '#FFFFFF' }}> Verify Documents</InputLabel>\r\n\r\n                    <InputLabel style={{ fontSize: '13px', color: '#FFFFFF', fontStyle: 'italic', fontWeight: 'light' }}>Invoices/POD</InputLabel>\r\n                    <IconButton onClick={() => {\r\n                      history.push(\"/verifyDocument\");\r\n                    }}> <KeyboardArrowRight\r\n                        style={{ color: \"white\", fontSize: \"30px\", float: \"right\" }}\r\n                      /></IconButton>\r\n\r\n\r\n\r\n\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </CardMedia>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default React.memo(AdminDashBoard);"],"sourceRoot":""}