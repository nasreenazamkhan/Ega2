{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","lib/components/messagebar/messagebar.js","lib/components/formContainer/formContainer.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","lib/components/txtinput/textInput.tsx","../node_modules/@material-ui/core/esm/Card/Card.js","lib/components/datepicker/appDatePicker.tsx","lib/components/dialog/alertDialog.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","lib/components/table/DataTable.tsx","../../../src/DatePicker/DatePickerToolbar.tsx","../../../src/DatePicker/DatePicker.tsx","lib/components/static/LabelComponent.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","lib/components/switch/appSwitch.tsx","components/masters/AddVehicleTypeForm.js","components/masters/ManageVehicleTypes.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","React","memo","mb","useSelector","state","messagebar","dispatch","useDispatch","MessageContainer","msgClass","icon","className","Icon","messages","map","e","onClick","hideMessageBar","console","log","show","messageType","SUCCESS","ERROR","INFO","WARNING","getMessageBar","props","Card","CardHeader","title","CardContent","children","SwitchBase","ref","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","disabled","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","useStyles","makeStyles","theme","txtDiv","display","iconDiv","fontSize","txtField","label","fieldIcon","helperText","placeholder","useRef","useEffect","form","field","meta","setFieldValue","showError","touched","error","fullWidth","InputProps","endAdornment","_props$raised","raised","Paper","elevation","overflow","useField","iconColor","defaultDate","compDate","str","day","split","mon","yr","myDate","Date","datestr","utils","DateFnsUtils","variant","format","autoOk","val","getDate","year","getMonth","getFullYear","handleChange","inputVariant","style","fontFamily","InputLabelProps","KeyboardButtonProps","color","onClose","isopen","message","_props$component","Component","paddingBottom","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","content","alignItems","flex","marginRight","alignSelf","marginTop","createSvgIcon","d","StyledTableCell","createStyles","head","backgroundColor","palette","common","black","white","body","TableCell","StyledTableRow","hover","TableRow","table","minWidth","getTableRow","dk","row","index","rd","datastr","eval","COLUMN_TYPE_STRING","align","DataTable","tableData","tableKeys","handleClick","actions","remote","remoteUrl","refresh","dataRootKey","useState","rowsPerPage","page","sortColumn","currentPageRows","currentPageKey","dtstate","setdtstate","errorMsg","alertOpen","setAlertOpen","loading","setLoading","loadDatTable","updateAlertState","status","msg","setCurrentSortColumn","sortEle","filter","tk","sort","sortActive","prevState","getPageData","trim","loadHttp","pageNo","pageSize","fnUrl","getHttp","url","then","remoteData","keyEle","catch","handleSort","scol","dir","fnlUrl","getTableHeadRow","active","direction","currentPage","nextPage","slice","handleChangePage","newpage","handleChangeRowsPerPage","marginBottom","aria-label","extIndex","act","x","tip","placement","arrow","rowsPerPageOptions","colSpan","count","backIconButtonProps","onChangePage","nextIconButtonProps","onChangeRowsPerPage","toolbar","flexDirection","toolbarLandscape","dateLandscape","DatePickerToolbar","date","views","setOpenView","isLandscape","openView","useUtils","isYearOnly","isYearOnlyView","isYearAndMonth","isYearAndMonthViews","React.createElement","selected","defaultProps","openTo","useOptions","getDefaultFormat","getFormatByViews","DatePicker","makePickerWithState","Input","DefaultToolbarComponent","KeyboardDatePicker","labelType","FormControlLabel","control","_props$labelPlacement","labelPlacement","controlProps","forEach","concat","capitalize","verticalAlign","WebkitTapHighlightColor","marginLeft","labelPlacementStart","labelPlacementTop","labelPlacementBottom","text","Switch","_props$color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","switchBase","track","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","fade","hoverOpacity","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","MyAppSwitch","onText","offText","switchTitle","as","formvalues","setFormvalues","validationSchema","Yup","code","isActive","refVehicleTypeLocales","description","createEditFormData","isAdd","initialValues","onSubmit","values","f","resetForm","onConfirm","enableReinitialize","formik","confirmTxt","isConfirm","submitForm","autoComplete","container","spacing","item","xs","ManageVehicleTypes","fmk","remoteBaseUrl","tableAction","vehiclesKey","NO_DIALOG","showPopup","setShowPopup","pstate","setPstate","setRemoteURl","createdDate","setAction","OTHER_POPUP","finalURL","element","formVal","endpointContants","obj","postHttp","response","errMsg"],"mappings":"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","file":"static/js/31.75aedff2.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { ms } from 'date-fns/locale';\r\nimport { SUCCESS, ERROR, INFO, WARNING } from '../../redux/messagebar/messagebarType';\r\nimport './messagebar.css';\r\nimport { Icon } from '@material-ui/core';\r\nimport { hideMessageBar } from '../../redux';\r\n\r\nfunction Messagebar() {\r\n    const mb = useSelector(state => state.messagebar);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const MessageContainer = ({ msgClass, icon }) => {\r\n        return (\r\n            <>\r\n                <div className={msgClass}>\r\n                    <div className=\"message-icon\"><Icon>{icon}</Icon></div>\r\n\r\n                    <div className=\"message-list\">\r\n                        <ul>{\r\n                            mb.messages.map((e, i) => {\r\n                                return <li key={i}>{e}</li>\r\n                            })\r\n                        }</ul>\r\n                    </div>\r\n                    <div className=\"close-icon\" onClick={() => {\r\n                        dispatch(hideMessageBar())\r\n                    }}>\r\n                        <Icon>clear</Icon>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    const getWarningMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-warning' icon='warning' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getInfoMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-info' icon='info' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getErrorMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-error' icon='error' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getSuccessMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-success' icon='check' />\r\n            </>)\r\n    }\r\n\r\n    const getMessageBar = () => {\r\n        console.log('IN componenet');\r\n        switch (mb.messageType) {\r\n            case SUCCESS: return getSuccessMessage();\r\n            case ERROR: return getErrorMessage();\r\n            case INFO: return getInfoMessage();\r\n            case WARNING: return getWarningMessage();\r\n            default:\r\n                return <></>;\r\n        }\r\n\r\n    }\r\n    console.log(mb);\r\n    return (\r\n        <>\r\n            {mb.show && mb.show === true && getMessageBar()}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Messagebar);\r\n","import React from 'react'\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport './formContainer.css';\r\nimport Messagebar from '../messagebar/messagebar';\r\nfunction FormContainer(props) {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader title={props.title} className=\"page-header\" />\r\n                <CardContent>\r\n                    <Messagebar />\r\n                    {props.children}\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(FormContainer);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import { TextField, makeStyles, Icon } from \"@material-ui/core\";\r\nimport { ClearOutlined, AccountCircle } from '@material-ui/icons';\r\nimport { FastField, FieldAttributes, FieldProps } from \"formik\";\r\nimport React, { useEffect } from 'react';\r\nimport { ElementInputProps } from '../../common/ElementInputProps';\r\nimport './textInput.css';\r\nimport ClearIcon from \"../icons/clearIcon\";\r\n\r\ntype MyTextFieldProps =\r\n    { iconType?: string } & ElementInputProps & FieldAttributes<{}>;\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    txtDiv: {\r\n        display: \"flex\"\r\n    },\r\n    iconDiv: {\r\n        width: \"25px\",\r\n        \"& span\": {\r\n            position: \"absolute\",\r\n            top: \"40%\",\r\n            fontSize: \"16px\"\r\n        }\r\n    },\r\n    txtField: {\r\n    }\r\n}));\r\n\r\n\r\nconst TextInput: React.FC<ElementInputProps>\r\n    = ({ required = false, name, label, helperText, fieldIcon,placeholder }) => {\r\n        const renders = React.useRef(0);\r\n        const showIcon = false;\r\n        const classes = useStyles();\r\n        useEffect(() => {\r\n        }, [])\r\n\r\n        return (\r\n            <>\r\n                <FastField name={name}>\r\n                    {\r\n                        ({ form, field, meta }: FieldProps) => {\r\n                            const { setFieldValue } = form;\r\n\r\n                            const handleIconClick = (event: any) => {\r\n                                setFieldValue(name, '');\r\n                            }\r\n\r\n                            let showError = false;\r\n                            if (meta.touched && meta.error) {\r\n                                showError = true;\r\n                                helperText = meta.error;\r\n                            }\r\n                            let icon = null;\r\n                            if (field.value) {\r\n                                icon = <ClearIcon onClick={handleIconClick} />;\r\n                            } else {\r\n                                icon = null;\r\n                            }\r\n                            return (\r\n                                <>\r\n                                    {/* <div>renders:{renders.current++}</div> */}\r\n                                    <div className={classes.txtDiv}>\r\n                                        {fieldIcon && <div className={classes.iconDiv}><Icon>{fieldIcon}</Icon></div>}\r\n                                        <TextField {...field} label={label} fullWidth id={field.name} className={classes.txtField}\r\n                                            error={showError}\r\n                                            helperText={showError ? meta.error : \"\"}\r\n                                            required={required} placeholder={placeholder}\r\n                                            InputProps={{\r\n                                                endAdornment: icon\r\n                                            }}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n\r\n                            )\r\n                        }\r\n                    }\r\n\r\n                </FastField>\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\nexport default React.memo(TextInput);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React, { useState, useEffect } from 'react';\r\nimport { FieldAttributes, Field, FieldProps, useField, FastField, useFormikContext } from \"formik\";\r\nimport { ElementInputProps } from \"../../common/ElementInputProps\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\n\r\n\r\n\r\ntype MydateProps =\r\n    {\r\n\r\n    } & ElementInputProps & FieldAttributes<{}>;\r\n\r\ntype MyDateState = {\r\n    dpDate: Date;\r\n}\r\n\r\n\r\n\r\nconst AppDatePicker: React.FC<MydateProps> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField<{}>(props);\r\n    const renders = React.useRef(0);\r\n\r\n    const { label, name,iconColor ,defaultDate,...rest } = props;\r\n    let compDate:Date=defaultDate?defaultDate:null;\r\n    // console.log(props);\r\n    useEffect(() => {\r\n    }, [])\r\n    var str: any = field.value;\r\n    if (str && str.length > 0) {\r\n        let day = str.split('/')[0];\r\n        let mon = str.split('/')[1];\r\n        let yr = str.split('/')[2];\r\n        let myDate = new Date(yr, mon - 1, day);\r\n        if (myDate instanceof Date)\r\n            compDate = myDate;\r\n    }\r\n\r\n    return (\r\n        <FastField name={name}>\r\n            {\r\n                ({ form, field }: FieldProps) => {\r\n                    const { setFieldValue } = form;\r\n                    const { value } = field;\r\n                    let datestr = '';\r\n                    const handleChange = (val: any) => {\r\n                        let datt = null;\r\n                        console.log(val);\r\n                        if (val && val !== 'Invalid Date') {\r\n                            let day = val.getDate();\r\n                            let month = val.getMonth() + 1;\r\n                            let year = val.getFullYear();\r\n                            datestr = day + '/' + (val.getMonth() + 1) + '/' + year;\r\n                            setFieldValue(name, datestr);\r\n\r\n                        }\r\n                        console.log(datestr);\r\n                    }\r\n\r\n                    return (\r\n                        <>\r\n                            {/* <div>renders:{renders.current++}</div> */}\r\n\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}  >\r\n                                <KeyboardDatePicker\r\n                                    fullWidth\r\n                                    label={label}\r\n                                    placeholder={label}\r\n                                    value={compDate}\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    autoOk={true}\r\n                                    onChange={val => {\r\n                                        compDate = val;\r\n                                        handleChange(val)\r\n                                    }\r\n                                  \r\n\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    inputVariant=\"outlined\"\r\n                                    InputProps = {{\r\n                                        endAdornment: null,\r\n                                        style:{\r\n                                           fontSize: '16px',\r\n                                           fontFamily:'Dubai Regular'\r\n                                           }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                       style:{\r\n                                       fontSize: '16px',\r\n                                       fontFamily:'Dubai Regular'\r\n                                       \r\n                                       }}}\r\n                                    KeyboardButtonProps={{\r\n                                        style:{\r\n                                            fontSize: '16px',\r\n                                            color:iconColor,\r\n                                            padding:0\r\n                                           }   \r\n                                    }}\r\n                                />\r\n\r\n                            </MuiPickersUtilsProvider>\r\n                        </>\r\n                    )\r\n                }\r\n            }\r\n        </FastField>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppDatePicker);\r\n\r\n","import React from 'react'\r\nimport { AppDialog } from './dialogBox'\r\n\r\nfunction AlertDialog(props) {\r\n    return (\r\n        <div>\r\n            <AppDialog title=\"Alert\" onClose={props.onClose} isopen={props.isopen}>\r\n                {props.message}\r\n            </AppDialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(AlertDialog);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import React, { Props, useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n  createStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  TextField,\r\n  Tooltip,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport \"./table.css\";\r\nimport { TableProps } from \"./tableProps\";\r\nimport { COLUMN_TYPE_STRING } from \"../../common/Constants\";\r\nimport AlertDialog from \"../dialog/alertDialog\";\r\nimport { getHttp } from \"../../common/HttpService\";\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  })\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  })\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst getTableRow = ({ dk, row, index }: any) => {\r\n  let rd = \"row.\" + dk.key;\r\n  let datastr = eval(rd);\r\n  if (dk.type === COLUMN_TYPE_STRING)\r\n    return (\r\n      <StyledTableCell key={index} align=\"center\">\r\n        {datastr}\r\n      </StyledTableCell>\r\n    );\r\n  else\r\n    return (\r\n      <StyledTableCell align=\"center\" key={index}>\r\n        {datastr}\r\n      </StyledTableCell>\r\n    );\r\n};\r\n\r\nconst DataTable: React.FC<TableProps> = ({\r\n  tableData,\r\n  tableKeys,\r\n  handleClick,\r\n  actions = [],\r\n  remote,\r\n  remoteUrl,\r\n  refresh,\r\n  dataRootKey,\r\n}) => {\r\n  const [dtstate, setdtstate] = useState({\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    sortColumn: null,\r\n    currentPageRows: [],\r\n    currentPageKey: [],\r\n    refresh: 0,\r\n  });\r\n  const [alertOpen, setAlertOpen] = useState({ isopen: false, errorMsg: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadDatTable();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadDatTable();\r\n  }, [refresh]);\r\n\r\n  const updateAlertState = (status: boolean, msg: string) => {\r\n    setAlertOpen({\r\n      isopen: status,\r\n      errorMsg: msg,\r\n    });\r\n  };\r\n\r\n  const setCurrentSortColumn = () => {\r\n    let sortEle = tableKeys.filter((tk) => {\r\n      return tk.sort === true && tk.sortActive === true;\r\n    });\r\n\r\n    setdtstate((prevState) => ({\r\n      ...prevState,\r\n      sortColumn: sortEle[0],\r\n    }));\r\n  };\r\n\r\n  const loadDatTable = () => {\r\n    setCurrentSortColumn();\r\n    if (remote !== true) {\r\n      setdtstate((prevState) => ({\r\n        ...prevState,\r\n        currentPageKey: tableKeys,\r\n        refresh: refresh,\r\n        page: 0,\r\n        rowsPerPage: 10,\r\n        currentPageRows: getPageData(0, 1, 10),\r\n      }));\r\n    } else {\r\n      // 'https://jsonplaceholder.typicode.com/users'\r\n\r\n      if (remoteUrl === \"\" || remoteUrl.trim() === \"\") return;\r\n\r\n      loadHttp(remoteUrl);\r\n    }\r\n  };\r\n\r\n  const loadHttp = (\r\n    remoteUrl: any,\r\n    pageNo = dtstate.page,\r\n    pageSize = dtstate.rowsPerPage\r\n  ) => {\r\n    setLoading(true);\r\n    let fnUrl = \"\";\r\n    if (remoteUrl.indexOf(\"?\") === -1) {\r\n      fnUrl = remoteUrl + \"?pgNo=\" + pageNo + \"&pgSize=\" + pageSize;\r\n    } else {\r\n      fnUrl = remoteUrl + \"&pgNo=\" + pageNo + \"&pgSize=\" + pageSize;\r\n    }\r\n\r\n    getHttp({ url: fnUrl }, false)\r\n      .then((e) => {\r\n        let remoteData = e;\r\n        if (dataRootKey && dataRootKey !== \"\") {\r\n          let keyEle = \"e.\" + dataRootKey;\r\n          remoteData = eval(keyEle);\r\n          console.log(remoteData);\r\n        }\r\n        setdtstate((prevState) => ({\r\n          ...prevState,\r\n          currentPageKey: tableKeys,\r\n          refresh: refresh,\r\n          page: 0,\r\n          rowsPerPage: 10,\r\n          currentPageRows: remoteData,\r\n        }));\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        updateAlertState(true, error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSort = (scol: any) => {\r\n    if (scol.id === dtstate.sortColumn.id) {\r\n      if (scol.dir === \"asc\") scol.dir = \"desc\";\r\n      else scol.dir = \"asc\";\r\n    } else {\r\n      scol.dir = \"asc\";\r\n    }\r\n    // setdtstate((prevState) => ({\r\n    //     ...prevState,\r\n    //     sortColumn: scol\r\n    // }));\r\n    let fnlUrl = null;\r\n    if (remoteUrl.indexOf(\"?\") === -1)\r\n      fnlUrl = remoteUrl + \"?sortCol=\" + scol.id + \"&sortOrder=\" + scol.dir;\r\n    else fnlUrl = remoteUrl + \"&sortCol=\" + scol.id + \"&sortOrder=\" + scol.dir;\r\n\r\n    loadHttp(fnlUrl, 1, 10);\r\n  };\r\n\r\n  const getTableHeadRow = ({ dk, index }: any) => {\r\n    // if (dk.type === COLUMN_TYPE_STRING)\r\n    return (\r\n      <StyledTableCell key={index} align=\"center\">\r\n        {dk.name}\r\n        {dk.sort === true && (\r\n          <TableSortLabel\r\n            key={index + 1}\r\n            className=\"table-sort-icon\"\r\n            active={dtstate.sortColumn.id === dk.id}\r\n            direction={\r\n              dtstate.sortColumn.id === dk.id ? dtstate.sortColumn.dir : \"asc\"\r\n            }\r\n            onClick={() => {\r\n              handleSort(dk);\r\n            }}\r\n          />\r\n        )}\r\n      </StyledTableCell>\r\n    );\r\n  };\r\n\r\n  const getPageData = (\r\n    currentPage: number,\r\n    nextPage: number,\r\n    rowsPerPage: number\r\n  ) => {\r\n    return tableData.slice(currentPage * rowsPerPage, nextPage * rowsPerPage);\r\n  };\r\n  const handleChangePage = (event: any, newpage: number) => {\r\n    if (remote !== true) {\r\n      setdtstate((prevState) => ({\r\n        ...prevState,\r\n        page: newpage,\r\n        currentPageRows: getPageData(newpage, newpage + 1, dtstate.rowsPerPage),\r\n      }));\r\n    } else {\r\n      setdtstate((prevState) => ({\r\n        ...prevState,\r\n        page: newpage,\r\n      }));\r\n      loadHttp(remoteUrl, newpage);\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: any) => {\r\n    if (remote !== true) {\r\n      setdtstate((prevState) => ({\r\n        ...prevState,\r\n        refresh: refresh,\r\n        page: 0,\r\n        rowsPerPage: event.target.value,\r\n        currentPageRows: getPageData(0, 1, event.target.value),\r\n      }));\r\n    } else {\r\n      let fnlUrl = remoteUrl + \"?pageNo=1&pageSize=\" + event.target.value;\r\n      loadHttp(fnlUrl);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <AlertDialog\r\n        isopen={alertOpen.isopen}\r\n        message={alertOpen.errorMsg}\r\n        onClose={(e: any) => {\r\n          updateAlertState(false, \"\");\r\n        }}\r\n      />\r\n\r\n      {loading ||\r\n      (dtstate.currentPageRows && dtstate.currentPageRows.length > 0) ? (\r\n        <div className=\"main-table-div\">\r\n          {loading && <CircularProgress className=\"dtable-loader\" />}\r\n          {loading && <div className=\"dtable-overlay\"></div>}\r\n          <Paper style={{ padding: \"20px\", marginBottom: \"20px\" }}>\r\n            <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {dtstate.currentPageKey.map((dk: any, index) =>\r\n                      getTableHeadRow({ dk, index })\r\n                    )}\r\n                    {actions.length > 0 ? (\r\n                      <StyledTableCell\r\n                        style={{ width: \"120px\" }}\r\n                      ></StyledTableCell>\r\n                    ) : null}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {dtstate.currentPageRows.map((row, extIndex) => (\r\n                    <StyledTableRow key={extIndex}>\r\n                      {dtstate.currentPageKey.map((dk, index) =>\r\n                        getTableRow({ dk, row, index })\r\n                      )}\r\n                      {actions.length > 0 ? (\r\n                        <StyledTableCell\r\n                          align=\"right\"\r\n                          style={{ width: \"120px\" }}\r\n                        >\r\n                          {actions.map((act, x) => (\r\n                            <Tooltip\r\n                              key={x}\r\n                              title={act.tip}\r\n                              placement=\"top\"\r\n                              arrow\r\n                            >\r\n                              <IconButton\r\n                                key={x}\r\n                                style={{ padding: \"0px\" }}\r\n                                onClick={() => {\r\n                                  handleClick(row, extIndex, x, act);\r\n                                }}\r\n                              >\r\n                                {\r\n                                  <Icon style={{ color: act.color }}>\r\n                                    {act.icon}\r\n                                  </Icon>\r\n                                }\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          ))}\r\n                        </StyledTableCell>\r\n                      ) : null}\r\n                    </StyledTableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10]}\r\n              colSpan={3}\r\n              component=\"div\"\r\n              count={dtstate.currentPageRows.length}\r\n              rowsPerPage={dtstate.rowsPerPage}\r\n              page={dtstate.page}\r\n              backIconButtonProps={{ id: \"backId\" }}\r\n              onChangePage={handleChangePage}\r\n              nextIconButtonProps={{ id: \"nextId\" }}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(DataTable);\r\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport ToolbarButton from '../_shared/ToolbarButton';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToolbarComponentProps } from '../Picker/Picker';\nimport { isYearAndMonthViews, isYearOnlyView } from '../_helpers/date-utils';\n\nexport const useStyles = makeStyles(\n  {\n    toolbar: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n    },\n    toolbarLandscape: {\n      padding: 16,\n    },\n    dateLandscape: {\n      marginRight: 16,\n    },\n  },\n  { name: 'MuiPickersDatePickerRoot' }\n);\n\nexport const DatePickerToolbar: React.FC<ToolbarComponentProps> = ({\n  date,\n  views,\n  setOpenView,\n  isLandscape,\n  openView,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const isYearOnly = React.useMemo(() => isYearOnlyView(views as any), [views]);\n  const isYearAndMonth = React.useMemo(() => isYearAndMonthViews(views as any), [views]);\n\n  return (\n    <PickerToolbar\n      isLandscape={isLandscape}\n      className={clsx({\n        [classes.toolbar]: !isYearOnly,\n        [classes.toolbarLandscape]: isLandscape,\n      })}\n    >\n      <ToolbarButton\n        variant={isYearOnly ? 'h3' : 'subtitle1'}\n        onClick={() => setOpenView('year')}\n        selected={openView === 'year'}\n        label={utils.getYearText(date)}\n      />\n\n      {!isYearOnly && !isYearAndMonth && (\n        <ToolbarButton\n          variant=\"h4\"\n          selected={openView === 'date'}\n          onClick={() => setOpenView('date')}\n          align={isLandscape ? 'left' : 'center'}\n          label={utils.getDatePickerHeaderText(date)}\n          className={clsx({ [classes.dateLandscape]: isLandscape })}\n        />\n      )}\n\n      {isYearAndMonth && (\n        <ToolbarButton\n          variant=\"h4\"\n          onClick={() => setOpenView('month')}\n          selected={openView === 'month'}\n          label={utils.getMonthText(date)}\n        />\n      )}\n    </PickerToolbar>\n  );\n};\n","import { useUtils } from '../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { DatePickerToolbar } from './DatePickerToolbar';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { getFormatByViews } from '../_helpers/date-utils';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { OutterCalendarProps } from '../views/Calendar/Calendar';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { datePickerDefaultProps, ParsableDate } from '../constants/prop-types';\nimport { useKeyboardPickerState } from '../_shared/hooks/useKeyboardPickerState';\nimport {\n  WithKeyboardInputProps,\n  WithPureInputProps,\n  makePickerWithState,\n} from '../Picker/makePickerWithState';\n\nexport type DatePickerView = 'year' | 'date' | 'month';\n\nexport interface BaseDatePickerProps extends OutterCalendarProps {\n  /**\n   * Min selectable date\n   * @default Date(1900-01-01)\n   */\n  minDate?: ParsableDate;\n  /**\n   * Max selectable date\n   * @default Date(2100-01-01)\n   */\n  maxDate?: ParsableDate;\n\n  /**\n   * Compare dates by the exact timestamp, instead of start/end of date\n   * @default false\n   */\n  strictCompareDates?: boolean;\n\n  /**\n   * Disable past dates\n   * @default false\n   */\n  disablePast?: boolean;\n  /**\n   * Disable future dates\n   * @default false\n   */\n  disableFuture?: boolean;\n  /**\n   * To animate scrolling to current year (using scrollIntoView)\n   * @default false\n   */\n  animateYearScrolling?: boolean;\n  /** Callback firing on year change @DateIOType */\n  onYearChange?: (date: MaterialUiPickersDate) => void;\n}\n\nexport interface DatePickerViewsProps extends BaseDatePickerProps {\n  /**\n   * Array of views to show\n   * @type {Array<\"year\" | \"date\" | \"month\">}\n   */\n  views?: DatePickerView[];\n  /** First view to show in DatePicker */\n  openTo?: DatePickerView;\n}\n\nexport type DatePickerProps = WithPureInputProps & DatePickerViewsProps;\n\nexport type KeyboardDatePickerProps = WithKeyboardInputProps & DatePickerViewsProps;\n\nconst defaultProps = {\n  ...datePickerDefaultProps,\n  openTo: 'date' as DatePickerView,\n  views: ['year', 'date'] as DatePickerView[],\n};\n\nfunction useOptions(props: DatePickerViewsProps) {\n  const utils = useUtils();\n\n  return {\n    getDefaultFormat: () => getFormatByViews(props.views!, utils),\n  };\n}\n\nexport const DatePicker = makePickerWithState<DatePickerProps>({\n  useOptions,\n  Input: PureDateInput,\n  useState: usePickerState,\n  DefaultToolbarComponent: DatePickerToolbar,\n});\n\nexport const KeyboardDatePicker = makePickerWithState<KeyboardDatePickerProps>({\n  useOptions,\n  Input: KeyboardDateInput,\n  useState: useKeyboardPickerState,\n  DefaultToolbarComponent: DatePickerToolbar,\n});\n\nDatePicker.defaultProps = defaultProps;\n\nKeyboardDatePicker.defaultProps = defaultProps;\n","import React from 'react';\r\nimport './label.css';\r\nimport { Icon } from '@material-ui/core';\r\n\r\nfunction LabelComponent(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"MuiFormLabel-root label-label-text\">\r\n                {props.label}\r\n            </div>\r\n            <div className=\"label-div\">\r\n                {props.labelType === 1 &&\r\n                    <span className=\"label-txt\">\r\n                        {props.value}\r\n                    </span>\r\n                }\r\n\r\n                {props.labelType === 2 &&\r\n                    <span onClick={() => {\r\n                        props.onClick(props.id)\r\n                    }} className=\"label-txt label-txt-hyperlink\">\r\n                        {props.value}\r\n                    </span>\r\n                }\r\n\r\n\r\n                {props.labelType === 3 &&\r\n                    <span onClick={() => {\r\n                        props.onClick(props.id)\r\n                    }} className=\"label-txt label-download\">\r\n                        <Icon>vertical_align_bottom</Icon>   {props.value}\r\n                    </span>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(LabelComponent);\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\r\nimport { FormLabel, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport { Field, useField, FieldAttributes, FastField } from \"formik\";\r\nimport { ElementInputProps } from '../../common/ElementInputProps';\r\nimport './appSwitch.css';\r\n\r\ntype MySwitchFieldProps =\r\n    {\r\n        status: boolean,\r\n        onText?: string,\r\n        offText?: string\r\n    } & ElementInputProps & FieldAttributes<{}>;\r\n\r\nconst MyAppSwitch: React.FC<MySwitchFieldProps> = ({ onText, offText, required, label, type, helperText, error, ...props }) => {\r\n    const [field, meta] = useField<{}>(props);\r\n    let showError = false;\r\n    if (meta.touched && meta.error) {\r\n        showError = true;\r\n        helperText = meta.error;\r\n    }\r\n\r\n    let status = false;\r\n    let switchTitle = offText;\r\n    if (field.value === true) {\r\n        status = true;\r\n        switchTitle = onText;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormLabel component=\"div\">{label}</FormLabel>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch checked={status} {...field}\r\n                        id={field.name} />\r\n                }\r\n                label={switchTitle}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst AppSwitch: React.FC<MySwitchFieldProps>\r\n    = ({ onText, offText, required = false, name, label, helperText }) => {\r\n\r\n\r\n        return (\r\n            <>\r\n                <FastField\r\n                    as={MyAppSwitch} label={label}\r\n                    name={name} id={name}\r\n                    helperText={helperText}\r\n                    required={required} onText={onText} offText={offText} />\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\nexport default React.memo(AppSwitch);","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Grid, Choose, When } from \"@material-ui/core\";\r\nimport TextInput from \"../../lib/components/txtinput/textInput\";\r\nimport { AppDialog } from \"../../lib/components/dialog/dialogBox\";\r\nimport AppSwitch from \"../../lib/components/switch/appSwitch\";\r\nimport LabelComponent from \"../../lib/components/static/LabelComponent\";\r\n\r\nconst AddVehicleTypeForm = (props) => {\r\n  const [formvalues, setFormvalues] = useState({});\r\n\r\n  const onSubmit = (values, f) => {\r\n    f.resetForm();\r\n    props.onConfirm(values, props.action);\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    code: Yup.string().required(\"Code is Required\"),\r\n    isActive: Yup.string().required(\"Active flag is Required\"),\r\n    refVehicleTypeLocales: Yup.object({\r\n      description: Yup.string().required(\"Description is Required\"),\r\n      name: Yup.string().required(\"Name is Required\"),\r\n    }),\r\n  });\r\n  useEffect(() => {\r\n    console.log(\"On load\");\r\n    setFormvalues(props.createEditFormData);\r\n  });\r\n\r\n  const handleConfirm = (fmk) => {\r\n    fmk.submitForm();\r\n  };\r\n\r\n  const handleClose = (fmk) => {\r\n    fmk.resetForm();\r\n    props.onClose();\r\n  };\r\n\r\n  const isAdd = props.action;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={formvalues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <>\r\n            <AppDialog\r\n              title=\"Create/Edit Vehicle Type\"\r\n              confirmTxt=\"Submit\"\r\n              onClose={() => {\r\n                handleClose(formik);\r\n              }}\r\n              isopen={props.isopen}\r\n              isConfirm={true}\r\n              onConfirm={() => {\r\n                handleConfirm(formik);\r\n              }}\r\n            >\r\n              <Form autoComplete=\"off\">\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    {isAdd === \"ADD\" ? (\r\n                      <TextInput\r\n                        label=\"Code\"\r\n                        name={\"code\"}\r\n                        id={\"code\"}\r\n                        helperText=\"Please Enter Code\"\r\n                      />\r\n                    ) : (\r\n                      <LabelComponent label=\"Code\" values={props.code} />\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextInput\r\n                      label=\"Name\"\r\n                      name={\"refVehicleTypeLocales.name\"}\r\n                      id={\"name\"}\r\n                      helperText=\"Please Enter Name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextInput\r\n                      label=\"Description\"\r\n                      name={\"refVehicleTypeLocales.description\"}\r\n                      id={\"description\"}\r\n                      helperText=\"Please Enter Description\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AppSwitch\r\n                      onText=\"Yes\"\r\n                      offText=\"No\"\r\n                      name={\"isActive\"}\r\n                      label=\"Active\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </AppDialog>\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\nexport default React.memo(AddVehicleTypeForm);\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport TextInput from \"../../lib/components/txtinput/textInput\";\r\nimport DataTable from \"../../lib/components/table/DataTable\";\r\nimport { COLUMN_TYPE_STRING } from \"../../lib/common/Constants\";\r\nimport AppButton from \"../../lib/components/buttons/appButton\";\r\nimport FormContainer from \"../../lib/components/formContainer/formContainer\";\r\nimport AddVehicleTypeForm from \"./AddVehicleTypeForm\";\r\nimport { OTHER_POPUP, NO_DIALOG } from \"../../lib/common/Constants\";\r\nimport AppDatePicker from \"../../lib/components/datepicker/appDatePicker\";\r\nimport { postHttp } from \"../../lib/common/HttpService\";\r\nimport * as endpointContants from \"../../utils/ptmsEndpoints\";\r\n\r\nlet createEditFormData = {\r\n  code: \"\",\r\n  isActive: true,\r\n  refVehicleTypeLocales: {\r\n    description: \"\",\r\n    name: \"\",\r\n  },\r\n};\r\n\r\nlet action;\r\n\r\nfunction ManageVehicleTypes() {\r\n  let remoteBaseUrl = \"/ptms/app/api/secure/vehicleType/search\";\r\n\r\n  let fmk;\r\n\r\n  let vehForm = {\r\n    code: \"\",\r\n    name: \"\",\r\n    createdDate: \"\",\r\n  };\r\n\r\n  const tableAction = [{ item: 2, tip: \"edit\", icon: \"edit_headline\" }];\r\n\r\n  const vehiclesKey = [\r\n    {\r\n      name: \"Code\",\r\n      type: COLUMN_TYPE_STRING,\r\n      key: \"code\",\r\n      id: 1,\r\n      sort: true,\r\n      sortActive: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      type: COLUMN_TYPE_STRING,\r\n      key: \"refVehicleTypeLocales.name\",\r\n      id: 2,\r\n      sort: true,\r\n      sortActive: true,\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      type: COLUMN_TYPE_STRING,\r\n      key: \"refVehicleTypeLocales.description\",\r\n      id: 3,\r\n    },\r\n    {\r\n      name: \"Created Date\",\r\n      type: COLUMN_TYPE_STRING,\r\n      key: \"creationDate\",\r\n      id: 4,\r\n      sort: true,\r\n      sortActive: true,\r\n    },\r\n    { name: \"Active\", type: COLUMN_TYPE_STRING, key: \"isActive\", id: 5 },\r\n  ];\r\n\r\n  const [showPopup, setShowPopup] = useState(NO_DIALOG);\r\n  const [pstate, setPstate] = useState(0);\r\n  const [remoteUrl, setRemoteURl] = useState(remoteBaseUrl);\r\n  const [formvalues, setFormvalues] = useState(vehForm);\r\n  const [action, setAction] = useState(\"ADD\");\r\n\r\n  return (\r\n    <Formik initialValues={formvalues}>\r\n      {(formik) => {\r\n        fmk = formik;\r\n        return (\r\n          <FormContainer title=\"Manage Vehicle Types\">\r\n            <Form autoComplete=\"off\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md\">\r\n                  <TextInput\r\n                    label=\"Code\"\r\n                    name={\"code\"}\r\n                    id={\"code\"}\r\n                    helperText=\"Search by code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md\">\r\n                  <TextInput\r\n                    label=\"Name\"\r\n                    name={\"name\"}\r\n                    id={\"name\"}\r\n                    helperText=\"Search by name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md\">\r\n                  <AppDatePicker\r\n                    name={\"createdDate\"}\r\n                    id={\"createdDate\"}\r\n                    label={\"Creation Date\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row button-holder\">\r\n                <div className=\"col\">\r\n                  <AppButton\r\n                    text={\"Reset\"}\r\n                    type={\"button\"}\r\n                    icon=\"refresh\"\r\n                    handleClick={() => {\r\n                      fmk.resetForm();\r\n                      setPstate(pstate + 1);\r\n                      let finalURL = remoteBaseUrl;\r\n                      setRemoteURl(finalURL);\r\n                    }}\r\n                  ></AppButton>\r\n\r\n                  <AppButton\r\n                    text={\"Create\"}\r\n                    type={\"button\"}\r\n                    icon=\"add\"\r\n                    handleClick={() => {\r\n                      let formData = {\r\n                        code: \"\",\r\n                        isActive: false,\r\n                        refVehicleTypeLocales: {\r\n                          description: \"\",\r\n                          name: \"\",\r\n                        },\r\n                      };\r\n                      setAction(\"ADD\");\r\n                      createEditFormData = formData;\r\n                      setShowPopup(OTHER_POPUP);\r\n                    }}\r\n                  ></AppButton>\r\n                  <AppButton\r\n                    text={\"Search\"}\r\n                    type={\"button\"}\r\n                    icon=\"search\"\r\n                    handleClick={() => {\r\n                      setPstate(pstate + 1);\r\n                      let finalURL =\r\n                        remoteBaseUrl +\r\n                        \"?code=\" +\r\n                        formik.values.code +\r\n                        \"&name=\" +\r\n                        formik.values.name +\r\n                        \"&createdDate=\" +\r\n                        formik.values.createdDate;\r\n                      setRemoteURl(finalURL);\r\n                    }}\r\n                  ></AppButton>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <DataTable\r\n                    refresh={pstate}\r\n                    tableKeys={vehiclesKey}\r\n                    remote={true}\r\n                    remoteUrl={remoteUrl}\r\n                    dataRootKey={\"elements\"}\r\n                    actions={tableAction}\r\n                    handleClick={(row, index, action, element) => {\r\n                      console.log(row);\r\n                      console.log(index);\r\n                      console.log(action);\r\n                      console.log(element);\r\n                      createEditFormData = row;\r\n                      createEditFormData.isActive =\r\n                        createEditFormData.isActive === \"YES\" ? true : false;\r\n                      setAction(\"EDIT\");\r\n                      setShowPopup(OTHER_POPUP);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <AddVehicleTypeForm\r\n                isopen={showPopup === OTHER_POPUP}\r\n                action={action}\r\n                createEditFormData={createEditFormData}\r\n                onClose={(e) => {\r\n                  setShowPopup(NO_DIALOG);\r\n                }}\r\n                onConfirm={(formVal, action) => {\r\n                  //setShowPopup(NO_DIALOG);\r\n                  //console.log(formVal);\r\n                  //saveForm(formVal);\r\n                  console.log(\"active flag\", formVal.isActive);\r\n                  setShowPopup(NO_DIALOG);\r\n                  let remoteUrl;\r\n                  if (action === \"ADD\")\r\n                    remoteUrl = endpointContants.createVehicleTypes;\r\n                  // if (action === \"EDIT\")\r\n                  //   remoteUrl = endpointContants.updateVehcileTypes;\r\n                  let obj = {\r\n                    url: remoteUrl,\r\n                    body: formVal,\r\n                  };\r\n                  postHttp(obj, true)\r\n                    .then((response) => {\r\n                      setPstate(pstate + 1);\r\n                    })\r\n                    .catch((error) => {\r\n                      const errMsg = error.message;\r\n                      console.log(errMsg);\r\n                      //dispatch(fetchUserFailure(errMsg));\r\n                    });\r\n                }}\r\n              />\r\n            </Form>\r\n          </FormContainer>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default ManageVehicleTypes;\r\n"],"sourceRoot":""}