{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","lib/components/messagebar/messagebar.js","lib/components/formContainer/formContainer.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","lib/components/select/selectBox.tsx","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","lib/components/datepicker/appDateTimePicker.tsx","components/Trip.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","React","memo","mb","useSelector","state","messagebar","dispatch","useDispatch","MessageContainer","msgClass","icon","className","Icon","messages","map","e","onClick","hideMessageBar","console","log","show","messageType","SUCCESS","ERROR","INFO","WARNING","getMessageBar","props","Card","CardHeader","title","CardContent","children","ref","action","avatar","classes","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","Typography","_extends","variant","display","color","clsx","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","multiple","options","required","label","placeholder","helperText","originalHelperText","fieldAction","useEffect","useRef","form","field","meta","showError","touched","error","fullWidth","id","option","value","IconButton","_props$edge","edge","_props$color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","ButtonBase","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","theme","textAlign","fontSize","typography","pxToRem","borderRadius","overflow","palette","active","transition","transitions","create","duration","shortest","backgroundColor","fade","hoverOpacity","marginLeft","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","justifyContent","useState","compDate","setCompDate","useField","str","dateStr","split","timeStr","day","mon","yr","hr","min","myDate","Date","setFieldValue","utils","DateFnsUtils","format","onChange","val","getDate","month","getUTCMonth","year","getUTCFullYear","getHours","getMinutes","ampm","autoOk","tripForm","startTime","endTime","driverCode","truckCode","validationSchema","Yup","Trip","formvalues","driverOptions","setDriverData","loadDriverData","a","url","endpointContants","fetch","then","response","json","data","driversFromApi","driver","catch","truckOptions","initialValues","onSubmit","values","enableReinitialize","formik"],"mappings":"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","file":"static/js/50.9662a79c.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { ms } from 'date-fns/locale';\r\nimport { SUCCESS, ERROR, INFO, WARNING } from '../../redux/messagebar/messagebarType';\r\nimport './messagebar.css';\r\nimport { Icon } from '@material-ui/core';\r\nimport { hideMessageBar } from '../../redux';\r\n\r\nfunction Messagebar() {\r\n    const mb = useSelector(state => state.messagebar);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const MessageContainer = ({ msgClass, icon }) => {\r\n        return (\r\n            <>\r\n                <div className={msgClass}>\r\n                    <div className=\"message-icon\"><Icon>{icon}</Icon></div>\r\n\r\n                    <div className=\"message-list\">\r\n                        <ul>{\r\n                            mb.messages.map((e, i) => {\r\n                                return <li key={i}>{e}</li>\r\n                            })\r\n                        }</ul>\r\n                    </div>\r\n                    <div className=\"close-icon\" onClick={() => {\r\n                        dispatch(hideMessageBar())\r\n                    }}>\r\n                        <Icon>clear</Icon>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    const getWarningMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-warning' icon='warning' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getInfoMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-info' icon='info' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getErrorMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-error' icon='error' />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getSuccessMessage = () => {\r\n        return (\r\n            <>\r\n                <MessageContainer msgClass='alert-message-box bg-success' icon='check' />\r\n            </>)\r\n    }\r\n\r\n    const getMessageBar = () => {\r\n        console.log('IN componenet');\r\n        switch (mb.messageType) {\r\n            case SUCCESS: return getSuccessMessage();\r\n            case ERROR: return getErrorMessage();\r\n            case INFO: return getInfoMessage();\r\n            case WARNING: return getWarningMessage();\r\n            default:\r\n                return <></>;\r\n        }\r\n\r\n    }\r\n    console.log(mb);\r\n    return (\r\n        <>\r\n            {mb.show && mb.show === true && getMessageBar()}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Messagebar);\r\n","import React from 'react'\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport './formContainer.css';\r\nimport Messagebar from '../messagebar/messagebar';\r\nfunction FormContainer(props) {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader title={props.title} className=\"page-header\" />\r\n                <CardContent>\r\n                    <Messagebar />\r\n                    {props.children}\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(FormContainer);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import { FormControl, InputLabel, MenuItem, Select, FormHelperText } from '@material-ui/core';\r\nimport { FastField, FieldAttributes, FieldProps } from \"formik\";\r\nimport React, { useEffect } from 'react';\r\nimport { ElementInputProps, LabelValue } from '../../common/ElementInputProps';\r\n\r\n\r\ntype MySelectFieldProps =\r\n    {\r\n        options: LabelValue[],\r\n        multiple?: boolean\r\n    } & ElementInputProps & FieldAttributes<{}>\r\n\r\n\r\n\r\nconst SelectBox: React.FC<MySelectFieldProps> = ({ multiple, options, required = false, name, label,\r\n    placeholder, helperText, fieldAction }) => {\r\n    let originalHelperText = '';\r\n    useEffect(() => {\r\n        originalHelperText = helperText;\r\n    }, []);\r\n    const renders = React.useRef(0);\r\n\r\n    return (\r\n        <>\r\n\r\n            <FastField name={name}>\r\n                {\r\n                    ({ form, field, meta }: FieldProps) => {\r\n\r\n                        let showError = false;\r\n                        if (meta.touched && meta.error) {\r\n                            showError = true;\r\n                            helperText = meta.error;\r\n                        } else {\r\n                            helperText = originalHelperText;\r\n                        }\r\n                        return (\r\n                            <>\r\n                                {/* <div>renders:{renders.current++}</div> */}\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel >{label}</InputLabel>\r\n                                    <Select {...field}\r\n                                        label={label}\r\n                                        id={name}\r\n                                        placeholder={placeholder}\r\n                                        error={showError}\r\n                                    >\r\n                                       \r\n                                        {options.map((option, i) => {\r\n                                            // console.log(option);\r\n\r\n                                            return (\r\n                                                <MenuItem value={option.value} key={i}>\r\n                                                    {option.label}\r\n                                                </MenuItem>\r\n                                            );\r\n                                        })}\r\n                                    </Select>\r\n                                    <FormHelperText className={showError === true ? \"Mui-error\" : \"\"} >{helperText}</FormHelperText>\r\n                                </FormControl>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n            </FastField>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(SelectBox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import React, { useState, useEffect } from 'react';\r\nimport { FieldAttributes, Field, FieldProps, useField } from \"formik\";\r\nimport { ElementInputProps } from \"../../common/ElementInputProps\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider, DatePicker, DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\r\n\r\n\r\n\r\n\r\ntype MydateProps =\r\n    {\r\n\r\n    } & ElementInputProps & FieldAttributes<{}>;\r\n\r\ntype MyDateState = {\r\n    dpDate: Date;\r\n}\r\n\r\nconst AppDateTimePicker: React.FC<MydateProps> = (props) => {\r\n    const [compDate, setCompDate] = useState(null);\r\n    const [field, meta, helpers] = useField<{}>(props);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        var str: any = field.value;\r\n        if (str) {\r\n            let dateStr = str.split(' ')[0];\r\n            let timeStr = str.split(' ')[1];\r\n            let day = dateStr.split('/')[0];\r\n            let mon = dateStr.split('/')[1];\r\n            let yr = dateStr.split('/')[2];\r\n            let hr = timeStr.split(\":\")[0];\r\n            let min = timeStr.split(\":\")[1];\r\n            let myDate = new Date(yr, mon - 1, day, hr, min);\r\n            if (myDate instanceof Date)\r\n                setCompDate(myDate);\r\n        }\r\n\r\n    }, [])\r\n\r\n    const { label, name, ...rest } = props;\r\n    return (\r\n        <Field name={name}>\r\n            {\r\n                ({ form, field }: FieldProps) => {\r\n                    const { setFieldValue } = form;\r\n                    const { value } = field;\r\n\r\n                    const handleChange = (val: any) => {\r\n\r\n                        if (val && val != 'Invalid Date') {\r\n                            let day = val.getDate();\r\n                            let month = val.getUTCMonth() + 1;\r\n                            let year = val.getUTCFullYear();\r\n                            let hr = val.getHours();\r\n                            let min = val.getMinutes();\r\n                            let datestr = day + '/' + month + '/' + year + ' ' + hr + ':' + min;\r\n                            setFieldValue(name, datestr);\r\n\r\n                        }\r\n                        setCompDate(val);\r\n                    }\r\n\r\n                    return (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                            {/* <KeyboardDatePicker\r\n                                fullWidth\r\n                                clearable\r\n                                label={label}\r\n                                placeholder={label}\r\n                                value={compDate}\r\n                                format=\"dd/MM/yyyy\" onChange={handleChange} /> */}\r\n                            <KeyboardDateTimePicker\r\n                                label={label}\r\n                                placeholder={label}\r\n                                value={compDate}\r\n                                variant=\"inline\"\r\n                                format={\"dd/MM/yyyy HH:mm\"}\r\n                                onChange={handleChange}\r\n                                ampm={false}\r\n                                autoOk={true}\r\n                            />\r\n\r\n                        </MuiPickersUtilsProvider>\r\n                    )\r\n                }\r\n            }\r\n        </Field>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppDateTimePicker);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport  FormContainer  from '../lib/components/formContainer/formContainer';\r\nimport  AppDateTimePicker  from '../lib/components/datepicker/appDateTimePicker';\r\nimport SelectBox from '../lib/components/select/selectBox';\r\n\r\nimport * as endpointContants from '../utils/ptmsEndpoints';\r\n\r\n\r\n\r\n\r\nlet tripForm = {\r\n    startTime: '',\r\n    endTime: '',\r\n    driverCode: '',\r\n    truckCode: '',\r\n\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    startTime: Yup.date().required('Start Time is Required'),\r\n    endTime: Yup.string().required('End Time is Required')\r\n \r\n});\r\n\r\n\r\n\r\n\r\nfunction Trip() {\r\n    const [formvalues, setFormvalues] = useState(tripForm);\r\n    const [driverOptions, setDriverData] = useState([]);\r\n    const loadDriverData = async () => {\r\n    let param1='Tr001';\r\n    //let url=endpointContants.fetchDriversForTransporter +'/Tr001'\r\n    let url=`${endpointContants.fetchRequestDetails} /${param1}`;\r\n    console.log(\"url is\",url);\r\n\r\n\r\n    fetch(url)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      let driversFromApi = data.map(driver => {\r\n        return {value: driver.value, label: driver.value}\r\n      });\r\n      setDriverData(driversFromApi);\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDriverData();\r\n       \r\n    }, []);\r\n    console.log(\"driverOptions\",driverOptions);\r\n\r\n\r\n\r\n    let fmk;\r\n    const simulateLoad = () => {\r\n        setFormvalues(tripForm);\r\n    }\r\n\r\n    const onSubmit = values => {\r\n        console.log(values);\r\n    }\r\n\r\n\r\n   //const driverOptions = [{ \"label\": \"Driver 1\", \"value\": \"v\" }, { \"label\": \"Driver 2\", \"value\": \"nv\" }];\r\n    const truckOptions = [{ \"label\": \"Truck 1\", \"value\": \"v\" }, { \"label\": \"Truck 2\", \"value\": \"nv\" }];\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <Formik initialValues={formvalues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n    >{\r\n        formik => {\r\n            fmk = formik;\r\n            return (\r\n                <>\r\n                   <FormContainer title=\"Add Trip\">\r\n                 { <div className=\"row\">\r\n                                        <div className=\"col-md\">\r\n                                            <AppDateTimePicker name={\"dateTime\"} label=\"Start Time\" />\r\n                                        </div>\r\n                                        <div className=\"col-md\">\r\n                                            <AppDateTimePicker name={\"dateTime\"} label=\"End Time\" />\r\n                                        </div>\r\n                                         <div className=\"col-md\">\r\n                                            <SelectBox label={\"Driver\"} name={\"driverCode\"}\r\n                                                options={driverOptions} />\r\n                                        </div> \r\n                                        <div className=\"col-md\">\r\n                                            <SelectBox label={\"Truck\"} name={\"truckCode\"}\r\n                                                options={truckOptions} />\r\n                                        </div>\r\n                                    </div>  \r\n                                    \r\n                }\r\n                                       \r\n                </FormContainer>\r\n                </>\r\n                )\r\n        }  \r\n    }\r\n    </Formik >\r\n      \r\n    )\r\n}\r\n\r\nexport default Trip;\r\n"],"sourceRoot":""}