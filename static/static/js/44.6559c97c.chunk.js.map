{"version":3,"sources":["lib/components/txtinput/textInput.tsx","lib/components/dialog/confirmDialog.js","lib/components/select/selectBox.tsx","components/address/AddressService.js","lib/components/toast/SuccessToast.js","components/address/CreateEditAddressPopup.js","components/googlemap/MapConfig.js","components/googlemap/Map.js","components/address/AddressCard.js","components/address/AddAddressCard.js","components/address/AddAddress.js"],"names":["useStyles","makeStyles","theme","txtDiv","display","iconDiv","width","position","top","fontSize","txtField","React","memo","required","name","label","fieldIcon","helperText","placeholder","classes","useRef","useEffect","form","field","meta","setFieldValue","showError","touched","error","icon","value","onClick","event","className","fullWidth","id","InputProps","endAdornment","props","title","onClose","children","closeTxt","confirmTxt","onConfirm","isConfirm","isopen","closeIcon","openIcon","closeButtonCss","confirmButtonCss","multiple","options","originalHelperText","fieldAction","map","option","i","key","AddressService","obj","url","endpointContants","getHttp","addressCode","remoteUrl","console","log","postHttp","catch","SuccessToast","message","showToast","style","marginTop","type","data-dismiss","aria-label","aria-hidden","useState","formvalues","setFormvalues","NO_DIALOG","pstate","setPstate","address","setAddress","setErr","zoneOpts","setZoneOpts","validationSchema","Yup","consigneeContactName","addressNickname","dropZone","consigneeContactNumber","matches","phoneNumber","dropAddress","obj1","then","response","data","dataItems","createEditFormData","handleClose","fmk","initialValues","onSubmit","values","f","code","action","body","enableReinitialize","formik","length","maxWidth","open","backgroundColor","color","textAlign","autoComplete","class","container","spacing","item","xs","errors","float","fontWeight","height","justifySelf","marginLeft","variant","handleClick","e","zoomLevel","initialLat","initialLng","apiKey","streetViewControl","gestureHandling","mapTypeControl","fullscreenControl","GoogleApiWrapper","config","lat","setLat","lng","setLng","google","zoom","initialCenter","ref","ev","location","latLng","Geocode","fromLatLng","results","formatted_address","setZoom","panTo","root","flexGrow","padding","border","borderBottom","clickableIcon","cancelButton","background","textTransform","confirmButton","selected","headerTitle","fontFamily","paddingLeft","addressLine1","AddressCard","showPopup1","setShowPopup1","setAction","showPopup2","setShowPopup2","showToaster","setShowToaster","addressSelected","setAddressSelected","openPopup","selectedDropZone","OTHER_POPUP","save","saved","RenderEditIcon","editFlag","deleteFlag","render","src","ALERT_DIALOG","RenderDivider","divider","borderWidth","textDecoration","alignItems","cursor","arrow","substring","borderTop","borderTopRightRadius","borderTopLeftRadius","deleteAddress","borderColor","borderStyle","marginBottom","justifyContent","flexDirection","AddAddressCard","showPopup","setShowPopup","addressForm","searchField","AddAddress","addressData","setAddressData","searchData","setSearchData","setData","setRender","a","fetchAddress","addressDtoList","loadAddress","refresh","remoteBaseUrl","text","undefined","inx","indexOf"],"mappings":"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","file":"static/js/44.6559c97c.chunk.js","sourcesContent":["import { TextField, makeStyles, Icon } from \"@material-ui/core\";\r\nimport { ClearOutlined, AccountCircle } from '@material-ui/icons';\r\nimport { FastField, FieldAttributes, FieldProps } from \"formik\";\r\nimport React, { useEffect } from 'react';\r\nimport { ElementInputProps } from '../../common/ElementInputProps';\r\nimport './textInput.css';\r\nimport ClearIcon from \"../icons/clearIcon\";\r\n\r\ntype MyTextFieldProps =\r\n    { iconType?: string } & ElementInputProps & FieldAttributes<{}>;\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    txtDiv: {\r\n        display: \"flex\"\r\n    },\r\n    iconDiv: {\r\n        width: \"25px\",\r\n        \"& span\": {\r\n            position: \"absolute\",\r\n            top: \"40%\",\r\n            fontSize: \"16px\"\r\n        }\r\n    },\r\n    txtField: {\r\n    }\r\n}));\r\n\r\n\r\nconst TextInput: React.FC<ElementInputProps>\r\n    = ({ required = false, name, label, helperText, fieldIcon,placeholder }) => {\r\n        const renders = React.useRef(0);\r\n        const showIcon = false;\r\n        const classes = useStyles();\r\n        useEffect(() => {\r\n        }, [])\r\n\r\n        return (\r\n            <>\r\n                <FastField name={name}>\r\n                    {\r\n                        ({ form, field, meta }: FieldProps) => {\r\n                            const { setFieldValue } = form;\r\n\r\n                            const handleIconClick = (event: any) => {\r\n                                setFieldValue(name, '');\r\n                            }\r\n\r\n                            let showError = false;\r\n                            if (meta.touched && meta.error) {\r\n                                showError = true;\r\n                                helperText = meta.error;\r\n                            }\r\n                            let icon = null;\r\n                            if (field.value) {\r\n                                icon = <ClearIcon onClick={handleIconClick} />;\r\n                            } else {\r\n                                icon = null;\r\n                            }\r\n                            return (\r\n                                <>\r\n                                    {/* <div>renders:{renders.current++}</div> */}\r\n                                    <div className={classes.txtDiv}>\r\n                                        {fieldIcon && <div className={classes.iconDiv}><Icon>{fieldIcon}</Icon></div>}\r\n                                        <TextField {...field} label={label} fullWidth id={field.name} className={classes.txtField}\r\n                                            error={showError}\r\n                                            helperText={showError ? meta.error : \"\"}\r\n                                            required={required} placeholder={placeholder}\r\n                                            InputProps={{\r\n                                                endAdornment: icon\r\n                                            }}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n\r\n                            )\r\n                        }\r\n                    }\r\n\r\n                </FastField>\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\nexport default React.memo(TextInput);","import React from 'react'\r\nimport { AppDialog } from './dialogBox'\r\n\r\nfunction ConfirmDialog(props) {\r\n    return (\r\n        <div>\r\n            <AppDialog title={props.title} onClose={props.onClose} children={props.children} closeTxt={props.closeTxt}\r\n                confirmTxt={props.confirmTxt} onConfirm={props.onConfirm} isConfirm={true} isopen={props.isopen}\r\n                closeIcon={props.closeIcon} openIcon={props.openIcon} closeButtonCss={props.closeButtonCss} confirmButtonCss={props.confirmButtonCss}>\r\n                {props.children}\r\n            </AppDialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ConfirmDialog);\r\n","import { FormControl, InputLabel, MenuItem, Select, FormHelperText } from '@material-ui/core';\r\nimport { FastField, FieldAttributes, FieldProps } from \"formik\";\r\nimport React, { useEffect } from 'react';\r\nimport { ElementInputProps, LabelValue } from '../../common/ElementInputProps';\r\n\r\n\r\ntype MySelectFieldProps =\r\n    {\r\n        options: LabelValue[],\r\n        multiple?: boolean\r\n    } & ElementInputProps & FieldAttributes<{}>\r\n\r\n\r\n\r\nconst SelectBox: React.FC<MySelectFieldProps> = ({ multiple, options, required = false, name, label,\r\n    placeholder, helperText, fieldAction }) => {\r\n    let originalHelperText = '';\r\n    useEffect(() => {\r\n        originalHelperText = helperText;\r\n    }, []);\r\n    const renders = React.useRef(0);\r\n\r\n    return (\r\n        <>\r\n\r\n            <FastField name={name}>\r\n                {\r\n                    ({ form, field, meta }: FieldProps) => {\r\n\r\n                        let showError = false;\r\n                        if (meta.touched && meta.error) {\r\n                            showError = true;\r\n                            helperText = meta.error;\r\n                        } else {\r\n                            helperText = originalHelperText;\r\n                        }\r\n                        return (\r\n                            <>\r\n                                {/* <div>renders:{renders.current++}</div> */}\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel >{label}</InputLabel>\r\n                                    <Select {...field}\r\n                                        label={label}\r\n                                        id={name}\r\n                                        placeholder={placeholder}\r\n                                        error={showError}\r\n                                    >\r\n                                       \r\n                                        {options.map((option, i) => {\r\n                                            // console.log(option);\r\n\r\n                                            return (\r\n                                                <MenuItem value={option.value} key={i}>\r\n                                                    {option.label}\r\n                                                </MenuItem>\r\n                                            );\r\n                                        })}\r\n                                    </Select>\r\n                                    <FormHelperText className={showError === true ? \"Mui-error\" : \"\"} >{helperText}</FormHelperText>\r\n                                </FormControl>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n            </FastField>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(SelectBox);","import React from 'react';\r\nimport * as endpointContants from '../../utils/ptmsEndpoints';\r\nimport { getHttp,postHttp } from '../../lib/common/HttpService';\r\n\r\nclass AddressService {\r\n\r\n   \r\n\r\n\r\n    fetchAddress()\r\n    {\r\n        const remoteUrl =`${endpointContants.fetchAddress}`;\r\n\r\n       // const remoteUrl = '${endpointContants.fetchTrucksForTransporter}?transporterCode=${transporterCode}&vehicleType=${vehicleType}';\r\n     \r\n        let obj = { url: remoteUrl };\r\n\r\n\r\n       return getHttp(obj, false);\r\n           \r\n\r\n    }\r\n\r\n    fetchAddressList(){\r\n         const remoteUrl =`${endpointContants.fetchAddressList}`;\r\n          let obj = { url: remoteUrl };\r\n       return getHttp(obj, false);\r\n    }\r\n\r\n    deleteAddress(addressCode) {\r\n        const remoteUrl = endpointContants.deleteAddress+\"/\"+addressCode;\r\n        console.log(\"e in dete::\", addressCode);\r\n    let obj = { url: remoteUrl};\r\n\r\n    return postHttp(obj, true).catch((error) => {\r\n      return error;\r\n    });\r\n    }\r\n}\r\n\r\nexport default new AddressService()\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport \"./SuccessToast.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst SuccessToast = (props) => {\r\n  const { title,message, icon, position,showToast } = props;\r\n \r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    \r\n    \r\n     <div className={`notification-success ${position}`}>\r\n     \r\n        <div className=\"info-boxSuccess\">\r\n        \r\n          <div className=\"icon bg-green\">\r\n            <i className=\"material-icons\">{icon}</i>\r\n          </div>\r\n          <div className=\"content\" >\r\n            <div className=\"title\">{title}</div>\r\n            <div className=\"message\">{message}</div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n          <button style={{marginTop:\"5px\",fontSize:\"25px\"}} type=\"button\"    onClick={() => {\r\n                         showToast(false);\r\n                            \r\n                          }}    className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\"  >&times;</span>\r\n\r\n    </button>\r\n    </div>\r\n         \r\n        </div>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuccessToast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { NO_DIALOG } from \"../../lib/common/Constants\";\r\nimport { postHttp, getHttp } from \"../../lib/common/HttpService\";\r\nimport * as endpointContants from \"../../utils/ptmsEndpoints\";\r\nimport MapComponent from \"../googlemap/Map\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Formik, Form } from \"formik\";\r\nimport TextInput from \"../../lib/components/txtinput/textInput\";\r\nimport SelectBox from \"../../lib/components/select/selectBox\";\r\nimport { Dialog, DialogTitle, DialogContent, Button } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst CreateEditAddressPopup = (props) => {\r\n  console.log(\"props in createEditAdddressPopup::\", props);\r\n  const [formvalues, setFormvalues] = useState(null);\r\n  const [key, setKey] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(NO_DIALOG);\r\n  const [pstate, setPstate] = useState(0);\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [err, setErr] = useState(false);\r\n\r\n\r\n  const [zoneOpts, setZoneOpts] = useState([]);\r\n\r\n  const validationSchema = Yup.object({\r\n    consigneeContactName: Yup.string().required(\"Consignee Name is Required\"),\r\n    addressNickname: Yup.string().required(\"Address nickname is Required\"),\r\n    dropZone: Yup.string().required(\"Drop Zone is Required\"),\r\n    consigneeContactNumber: Yup.string()\r\n      .required(\"Mobile Number is Required\")\r\n      .matches(/^[+][0-9]\\d{11,11}$/, \"Format must be +971xxxxxxxxx\"),\r\n    phoneNumber: Yup.string()\r\n      .required(\"Phone Number is Required\")\r\n      .matches(/^[+][0-9]\\d{10,10}$/, \"Format must be +971xxxxxxxx\"),\r\n      dropAddress:Yup.string().required(\"Drop Address is Required\")\r\n  });\r\n\r\n  useEffect(() => {\r\n    const remoteUrl = endpointContants.fetchZone;\r\n    let obj1 = { url: remoteUrl };\r\n    \r\n    getHttp(obj1, true)\r\n      .then((response) => {\r\n        setZoneOpts(response.data.dataItems);\r\n        console.log(\"-------\", response.data.dataItems);\r\n      })\r\n      .then(() => {\r\n        \r\n        setFormvalues(props.createEditFormData);\r\n        setAddress(props.createEditFormData.dropAddress);\r\n      })\r\n      .catch((error) => { });\r\n    \r\n  }, []);\r\n\r\n  const onSubmit = (values,f) => {\r\n    console.log(\"values::::\", values);\r\n    console.log(\"f::::\", f);\r\n    if (address !== \"\") {\r\n      console.log(\"value ::\", values);\r\n\r\n      values.dropAddress = address;\r\n      values.code = props.createEditFormData.code;\r\n\r\n      console.log(\"eeeeeeee\", values);\r\n      console.log(\"action :::\", props.action);\r\n      let remoteUrl;\r\n      if (props.action === \"ADD\") remoteUrl = endpointContants.createAddress;\r\n      if (props.action === \"EDIT\") remoteUrl = endpointContants.updateAddress;\r\n      let obj = {\r\n        url: remoteUrl,\r\n        body: values,\r\n      };\r\n      postHttp(obj, true)\r\n        .then((response) => {\r\n          setPstate(pstate + 1);\r\n          props.onConfirm();\r\n          //setFormData(response);\r\n        })\r\n        .catch((error) => {});\r\n    } else {\r\n      setErr(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (fmk) => {\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={formvalues ? formvalues : \"\"}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize={true}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <>\r\n            { zoneOpts.length!==0 && <Dialog\r\n             \r\n              fullWidth={true}\r\n              maxWidth={\"md\"}\r\n              open={props.isopen}\r\n            >\r\n              <DialogTitle\r\n                style={{\r\n                  backgroundColor: \"#FFF\",\r\n                  color: \"black\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                <IconButton\r\n                  className=\"icon-button\"\r\n                  aria-label=\"close\"\r\n                  onClick={handleClose}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                {props.action === \"ADD\" ? \"Add Location\" : \"Edit Address\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <Form autoComplete=\"off\">\r\n                  <div class=\"row\">\r\n                    <div style={{ width: \"300px\" }}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                          <TextField\r\n                            // label=\"Located from map\"\r\n                            placeholder={'Locate from map'}\r\n                            name={\"dropAddress\"}\r\n                            id={\"dropAddress\"}\r\n                            value={address}\r\n                            error={formik.touched.dropAddress && formik.errors.dropAddress}\r\n                            helperText={formik.touched.dropAddress && formik.errors.dropAddress ? formik.errors.dropAddress : ''}\r\n                            value={address ? address : formik.values?.dropAddress}\r\n                            fullWidth\r\n                          //  error={err}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextInput\r\n                            label=\"Address line 1\"\r\n                            name={\"addressLine1\"}\r\n                            id={\"addressLine1\"}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <SelectBox\r\n                            label=\"Zone\"\r\n                            name={\"dropZone\"}\r\n                            options={zoneOpts}\r\n                           \r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextInput\r\n                            label=\"Nick name\"\r\n                            name={\"addressNickname\"}\r\n                            id={\"addressNickname\"}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextInput\r\n                            label=\"Contact Person\"\r\n                            name={\"consigneeContactName\"}\r\n                            id={\"consigneeContactName\"}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextInput\r\n                            label=\"Phone Number\"\r\n                            placeholder=\"e.g. +971xxxxxxxx\"\r\n                            name={\"phoneNumber\"}\r\n                            id={\"phoneNumber\"}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextInput\r\n                            label=\"Mobile Number\"\r\n                            name={\"consigneeContactNumber\"}\r\n                            id={\"consigneeContactNumber\"}\r\n                            placeholder=\"e.g. +971xxxxxxxxx\"\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Button\r\n                          // style={{\r\n                          //   //backgroundColor: \"#C62926\",\r\n                          //  // color: \"white\",\r\n                          //   justifySelf: \"right\",\r\n                          //   textTransform: \"none\",\r\n                          //   marginLeft: \"250px\",\r\n                          //   marginTop: \"20px\",\r\n                          // }}\r\n                          // color=\"primary\"\r\n                          // type=\"submit\"\r\n                          style={{ float: \"right\",fontWeight:\"lighter\",width:\"122px\",height:\"41px\",fontSize:\"17px\",justifySelf: \"right\",marginLeft: \"200px\",marginTop: \"20px\"}}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                        >\r\n                          Continue\r\n                        </Button>\r\n                      </Grid>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <MapComponent\r\n                        handleClick={(e) => {\r\n                          setAddress(e);\r\n                          formik.setFieldValue('dropAddress', e);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </DialogContent>\r\n            </Dialog>}\r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default React.memo(CreateEditAddressPopup);\r\n","export default {\r\n    zoomLevel: 12,\r\n    initialLat: 25.2048,\r\n    initialLng: 55.2708,\r\n    apiKey: 'AIzaSyAECHNsbM59mna4pUyxIqnlvwQhLagQggo',\r\n    streetViewControl: false,\r\n    gestureHandling: \"auto\",\r\n    mapTypeControl: false,\r\n    fullscreenControl: false\r\n};","import React, { useState } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nimport Geocode from \"react-geocode\";\r\n// import mapStyles from './mapStyle';\r\nimport config from './MapConfig';\r\n\r\nfunction MapComponent(props) {\r\n  const [zoomLevel, setZoomLevel] = useState(config.zoomLevel)\r\n  const [lat, setLat] = useState(config.lat || 25.2048);\r\n  const [lng, setLng] = useState(config.lng || 55.2708);\r\n \r\n  const handleMapClick = (ref, map, ev) => {\r\n    const location = ev.latLng;\r\n    setLat(location.lat());\r\n    setLng(location.lng());\r\n    Geocode.fromLatLng(location.lat(),location.lng(),config.apiKey).then(\r\n      response => {\r\n        const address = response.results[0].formatted_address;\r\n        console.log(\"formatted_address :: \" + address);\r\n        props.handleClick(address);\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n    map.setZoom(15);\r\n    map.panTo(location);\r\n  };\r\n\r\n  return (\r\n    <div style={{width:\"50%%\", height: \"50vh\"}}>\r\n      <Map\r\n        google={props.google}\r\n        zoom={zoomLevel}\r\n        initialCenter={{\r\n          lat,\r\n          lng\r\n        }}\r\n        streetViewControl={config.streetViewControl}\r\n        gestureHandling={config.gestureHandling}\r\n        onClick={handleMapClick}\r\n        mapTypeControl={config.mapTypeControl}\r\n        fullscreenControl={config.fullscreenControl}\r\n      >\r\n        <Marker\r\n          position={{ lat: lat, lng: lng }}\r\n          \r\n         /> \r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({ apiKey: config.apiKey })(MapComponent);","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Card, CardActions, CardContent, CardHeader } from \"@material-ui/core/\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CreateEditAddressPopup from \"./CreateEditAddressPopup\";\r\nimport { OTHER_POPUP, NO_DIALOG } from \"../../lib/common/Constants\";\r\n\r\nimport * as endpointContants from \"../../utils/ptmsEndpoints\";\r\nimport AddressService from \"./AddressService\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { InputLabel ,Tooltip} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { ALERT_DIALOG } from \"../../lib/common/Constants\";\r\nimport ConfirmDialog from \"../../lib/components/dialog/confirmDialog\";\r\nimport SuccessToast from \"../../lib/components/toast/SuccessToast\";\r\nimport { postHttp, getHttp } from \"../../lib/common/HttpService\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    height: \"230px \",\r\n    width: \"182px \",\r\n    fontSize: \"12px\",\r\n    border: \" 1px solid #d8d8d8\",\r\n    borderBottom:\"none\"\r\n  },\r\n  clickableIcon: {\r\n    color: \"grey\",\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  cancelButton: {\r\n    background: \"#dc4e4e\",\r\n    color: \"#fff\",\r\n    textTransform: \"none\",\r\n    float: \"center\",\r\n    width: \"56px\",\r\n    height:\"30px\"\r\n  },\r\n  confirmButton: {\r\n    background: \"#4CAB5B\",\r\n    color: \"#fff\",\r\n    textTransform: \"none\",\r\n    float: \"center\",\r\n    width: \"56px\",\r\n    height:\"30px\"\r\n  },\r\n  selected:{\r\n    border: \"1px solid #0568AE\",\r\n  },\r\n  headerTitle: {\r\n    fontSize: 18,\r\n    fontFamily: \"Dubai Regular\",\r\n    paddingLeft: \"0px\",\r\n    color:\"#686868\"\r\n  }\r\n}));\r\n\r\n\r\n\r\nlet createEditFormData = {\r\n  consigneeContactName: \"\",\r\n  consigneeContactNumber: \"\",\r\n  addressNickname:\"\",\r\n  dropAddress: \"\",\r\n  code: \"\",\r\n  phoneNumber: \"\",\r\n  addressLine1: \"\",\r\n  dropZone:\"\"\r\n};\r\nlet action;\r\n\r\nexport default function AddressCard(props) {\r\n  const classes = useStyles();\r\n  console.log(\"Props in addressCard ::\", props);\r\n  const [showPopup1, setShowPopup1] = useState(NO_DIALOG);\r\n  const [pstate, setPstate] = useState(0);\r\n  const [action, setAction] = useState(\" \");\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [addressData, setAddressData] = useState([]);\r\n  const [showPopup2, setShowPopup2] = useState(NO_DIALOG);\r\n  const [showToaster, setShowToaster] = useState(null);\r\n  const [zoneOpts, setZoneOpts] = useState([]);\r\n  const [addressSelected, setAddressSelected] = useState([classes.root]);\r\n\r\n\r\n  const openPopup = () => {\r\n    console.log(\"props... in address card on click of edit::\", props);\r\n    // let formData = {\r\n    //   consigneeContactName: props.address.consigneeContactName,\r\n    //   consigneeContactNumber: props.address.consigneeContactNumber,\r\n    //   //consigneeContactEmail: props.address.consigneeContactEmail,\r\n    //   dropAddress: props.address.dropAddress,\r\n    //   code: props.address.code,\r\n    //   dropZone: props.address.selectedDropZone,\r\n     \r\n    //   //isActive: props.address.isActive === \"YES\" ? true : false,\r\n    //   addressNickname: props.address.addressNickname,\r\n    //   addressLine1: props.address.addressLine1,\r\n    //   phoneNumber: props.address.phoneNumber\r\n    // };\r\n    createEditFormData = props.address;\r\n    createEditFormData.dropZone = props.address.selectedDropZone;\r\n    // createEditFormData.isActive =\r\n    //   props.address.isActive === \"YES\" ? true : false;\r\n    console.log(\"createEditFormData in popup::\", createEditFormData);\r\n    setAction(\"EDIT\");\r\n    setPstate(pstate + 1);\r\n    setShowPopup1(OTHER_POPUP);\r\n  };\r\n\r\n  const save = () => {\r\n    console.log(\"props... in address card on click of link\", props);\r\n    setAddressSelected([classes.root, classes.selected]);\r\n    props.saved(props.address);\r\n  };\r\n\r\n  const RenderEditIcon = () => {\r\n    console.log(\"renderEditIcon addressCard ::\", props);\r\n\r\n    if (props.editFlag === \"true\" && props.deleteFlag === \"true\") {\r\n      return (\r\n        <>\r\n          <IconButton onClick={openPopup}\r\n              address={props.address}\r\n              render={props.render}\r\n             >\r\n          <img src='./pencil.svg'/>\r\n          </IconButton>\r\n          <IconButton  onClick={() => {\r\n              setShowPopup2(ALERT_DIALOG);\r\n           }} address={props.address}>\r\n            <img src='./trash.svg'/>\r\n             \r\n              \r\n             \r\n           \r\n          </IconButton>\r\n        </>\r\n      );\r\n    } else if (props.deleteFlag === \"true\" && props.editFlag === \"false\") {\r\n      return (\r\n        <>\r\n          <IconButton>\r\n            <DeleteIcon onClick={() => {\r\n               setShowPopup2(ALERT_DIALOG);\r\n            }} address={props.address} />\r\n          </IconButton>\r\n        </>\r\n      );\r\n    } else if (props.deleteFlag === \"false\" && props.editFlag === \"true\") {\r\n      return (\r\n        <>\r\n          <IconButton>\r\n            <EditIcon onClick={openPopup} address={props.address} />\r\n          </IconButton>\r\n        </>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  const RenderDivider = () => {\r\n    if (props.divider !== \"\") {\r\n      return (\r\n        <>\r\n         <hr style={{color:\"#D8D8D8\",border:\"solid\",borderWidth:\"1px\",marginTop:\"0px\"}}></hr>\r\n          <Link style={{textDecoration:\"underline\",color:\"#0568AE\",marginTop:\"5px\",fontSize:\"16px\",alignItems:\"center\",marginLeft:\"15px\", cursor:\"pointer\"}} onClick={save}>\r\n            {props.divider}\r\n          </Link>\r\n        </>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={addressSelected} >\r\n        <CardHeader style={{padding:\"0 0 0 0px\"}}\r\n          action={<RenderEditIcon address={props.address} />}\r\n          title={`${props.address.addressNickname}`}\r\n          classes={{\r\n            title: classes.headerTitle\r\n          }}  // titleTypographyProps={{ variant: \"h6\" }}\r\n        \r\n        />\r\n        <Divider />\r\n        <CardContent style={{paddingLeft:\"3px\"}}>\r\n          <InputLabel\r\n            style={{ fontSize: \"16px\", color: \"#686868\",  textAlign:\"left\",height:\"19px\",width:\"150px\"}}\r\n          >\r\n            {props.address.consigneeContactName}\r\n          </InputLabel>\r\n\r\n          <Tooltip title={props.address.dropAddress} arrow>\r\n          <InputLabel\r\n            style={{ fontSize: \"16px\", color: \"#686868\" ,textAlign:\"left\" ,height:\"19px\",marginTop:\"5px\",width:\"150px\"}}\r\n          >\r\n           \r\n              \r\n              {`${props.address.dropAddress.substring(0, 20)}`}...\r\n              \r\n          </InputLabel>\r\n          </Tooltip>\r\n          <InputLabel\r\n            style={{ fontSize: \"16px\", color: \"#686868\" ,textAlign:\"left\",height:\"19px\",marginTop:\"5px\",width:\"150px\"}}\r\n          >\r\n           Mob: {props.address.consigneeContactNumber}\r\n          </InputLabel>\r\n\r\n          <InputLabel\r\n            style={{ fontSize: \"16px\", color: \"#686868\",textAlign:\"left\",height:\"19px\",marginTop:\"5px\",width:\"150px\"}}\r\n          >\r\n           ph: {props.address.phoneNumber}\r\n          </InputLabel>\r\n        </CardContent>\r\n       \r\n        {/* <CardActions style={{display:\"flex\",flexDirection: \"column\"}}>\r\n        <RenderDivider /> </CardActions>  */}\r\n      </Card>\r\n      {/* <Box style={{width:\"182px\",height:\"41px\"}}> <RenderDivider /></Box> */}\r\n       {props.divider !== \"\" && <Card style={{ width: \"182px\",height:\"41px\", flexGrow: 1,marginTop:\"-41px\",\r\n       border:\"1px solid #d8d8d8\",borderTop:\"none\",borderTopRightRadius:\"0px\",borderTopLeftRadius:\"0px\"}}>\r\n         <RenderDivider /></Card>} \r\n\r\n      {showPopup1 === OTHER_POPUP && (\r\n        <CreateEditAddressPopup\r\n          isopen={showPopup1 === OTHER_POPUP}\r\n          action={action}\r\n          createEditFormData={createEditFormData}\r\n          onClose={(e) => {\r\n            setShowPopup1(NO_DIALOG);\r\n          }}\r\n          onConfirm={(e) => {\r\n            //  this.forceUpdate();\r\n            setShowPopup1(NO_DIALOG);\r\n            props.saved();\r\n            props.render();\r\n          }}\r\n        />\r\n      )}\r\n      {showPopup2 === ALERT_DIALOG && <ConfirmDialog\r\n        fullWidth={true}\r\n        isopen={showPopup2 === ALERT_DIALOG}\r\n        title={\"Attention!\"}\r\n        children={\"Are You sure to delete the address?\"}\r\n        confirmTxt={\"Yes\"}\r\n        closeTxt={\"No\"}\r\n       \r\n        confirmButtonCss={classes.confirmButton}\r\n        closeButtonCss={classes.cancelButton}\r\n        onClose={() => {\r\n          setShowPopup2(NO_DIALOG);\r\n        }}\r\n        onConfirm={(e) => {\r\n          console.log(\"ewerr\", props.address);\r\n          AddressService.deleteAddress(props.address.code)\r\n            .then((response) => {\r\n              console.log(\r\n                \"response after deleting address\",\r\n                response\r\n              );\r\n              \r\n              setShowPopup2(NO_DIALOG);\r\n              props.render();\r\n              setShowToaster(true);\r\n            })\r\n\r\n            .catch(() => {\r\n              console.log(\"error\");\r\n            });\r\n        }\r\n        }\r\n      />}\r\n           {\r\n                          showToaster &&  <SuccessToast\r\n                            icon=\"check_circle\"\r\n                            title=\"Address deleted successfully\"\r\n                            message=\"\"\r\n                            showToast={()=>{setShowToaster(false)}}\r\n                            position=\"top-right\"\r\n                          />}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { OTHER_POPUP, NO_DIALOG } from \"../../lib/common/Constants\";\r\nimport CreateEditAddressPopup from \"./CreateEditAddressPopup\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport { Grid, Card, CardContent, CardHeader } from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../assets/styles.css\";\r\nimport { postHttp, getHttp } from \"../../lib/common/HttpService\";\r\nimport * as endpointContants from \"../../utils/ptmsEndpoints\";\r\nlet createEditFormData = {\r\n  consigneeContactName: \"\",\r\n  consigneeContactNumber: \"\",\r\n //dropZone:\"\",\r\n  dropAddress: \"\",\r\n  code: \"\",\r\n  addressNickname: \"\",\r\n  phoneNumber: \"\",\r\n  addressLine1:\"\"\r\n  \r\n};\r\nlet action;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    height: \"230px\",\r\n    width: \"182px\",\r\n    fontSize: \"12px\",\r\n    borderColor: \"#0E1B3D\",\r\n    borderWidth: \"1.5px\",\r\n    borderStyle: \"dashed\",\r\n    marginBottom: \"0px !important\",\r\n    display:\"flex\",\r\njustifyContent:\"center\",\r\nalignItems:\"center\",\r\nflexDirection: \"column\"\r\n  },\r\n}));\r\n\r\nexport default function AddAddressCard(props) {\r\n  const classes = useStyles();\r\n  const [showPopup, setShowPopup] = useState(NO_DIALOG);\r\n  const [pstate, setPstate] = useState(0);\r\n  const [action, setAction] = useState(\" \");\r\n  const [zoneOpts, setZoneOpts] = useState([]);\r\n  console.log(\"action is\", action);\r\n\r\n  const render = () => {\r\n    console.log(\"hiii\");\r\n    props.render();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const remoteUrl = endpointContants.fetchZone;\r\n    let obj1 = { url: remoteUrl };\r\n\r\n    getHttp(obj1, true)\r\n      .then((response) => {\r\n        setZoneOpts(response.data.dataItems);\r\n       \r\n      })\r\n      .catch((error) => {});\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n       <Card className={classes.root}>\r\n      <IconButton\r\n        aria-label=\"Add\"\r\n       // className=\"centerPosition\"\r\n        // onClick={() => {\r\n        //   let formData = {\r\n        //     consigneeContactName: \"\",\r\n        //     consigneeContactNumber: \"\",\r\n        //     phoneNumber: \"\",\r\n        //     dropAddress: \"\",\r\n        //     addressLine1: \"\",\r\n        //     addressNickname: \"\",\r\n        //     //dropZone:zoneOpts,\r\n        //     dropZone:\"\",\r\n        //   };\r\n        //   createEditFormData = formData;\r\n        //   setAction(\"ADD\");\r\n        //   setPstate(pstate + 1);\r\n        //   setShowPopup(OTHER_POPUP);\r\n        //   console.log(\"clicked\");\r\n        // }}\r\n      >\r\n        <div>\r\n          <div>\r\n            {\" \"}\r\n              <img src=\"./add_location_plus.svg\" \r\n       onClick={() => {\r\n          let formData = {\r\n            consigneeContactName: \"\",\r\n            consigneeContactNumber: \"\",\r\n            phoneNumber: \"\",\r\n            dropAddress: \"\",\r\n            addressLine1: \"\",\r\n            addressNickname: \"\",\r\n            //dropZone:zoneOpts,\r\n            dropZone:\"\",\r\n          };\r\n          createEditFormData = formData;\r\n          setAction(\"ADD\");\r\n          setPstate(pstate + 1);\r\n          setShowPopup(OTHER_POPUP);\r\n          console.log(\"clicked\");\r\n        }}/>\r\n          </div>\r\n          <div>\r\n            <InputLabel\r\n              class=\"upperCase \"\r\n              style={{ fontSize: \"12px\", color: \"#0568AE\" }}\r\n            >\r\n              Add Location\r\n            </InputLabel>\r\n          </div>\r\n        </div>\r\n        </IconButton>\r\n        </Card>\r\n      {showPopup === OTHER_POPUP && (\r\n        <CreateEditAddressPopup\r\n          isopen={showPopup === OTHER_POPUP}\r\n          action={action}\r\n          createEditFormData={createEditFormData}\r\n          onClose={(e) => {\r\n            setShowPopup(NO_DIALOG);\r\n          }}\r\n          onConfirm={(e) => {\r\n     // this.forceUpdate();\r\n            setShowPopup(NO_DIALOG);\r\n            render();\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport AddressService from \"./AddressService\";\r\nimport { NO_DIALOG } from \"../../lib/common/Constants\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { getHttp } from \"../../lib/common/HttpService\";\r\nimport AddressCard from \"./AddressCard\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\n\r\n\r\nimport TextInput from \"../../lib/components/txtinput/textInput\";\r\nimport AppButton from \"../../lib/components/buttons/appButton\";\r\nimport AddAddressCard from \"./AddAddressCard\";\r\nimport \"../../assets/styles.css\";\r\n\r\nimport { Grid, Card, CardContent, CardHeader } from \"@material-ui/core/\";\r\n\r\nlet remoteBaseUrl = \"/ptms/app/api/secure/address/search\";\r\n\r\n\r\n\r\nlet addressForm = {\r\n  searchField: \"\",\r\n};\r\n\r\nfunction AddAddress() {\r\n\r\n  const [addressData, setAddressData] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(NO_DIALOG);\r\n  const [pstate, setPstate] = useState(0);\r\n  const [action, setAction] = useState(\" \");\r\n  const [remoteUrl, setRemoteURl] = useState(remoteBaseUrl);\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [formvalues, setFormvalues] = useState(addressForm);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [render, setRender] = useState(0);\r\n  let fmk;\r\n\r\n  useEffect(() => {\r\n    const loadAddress = async () => {\r\n      AddressService.fetchAddress()\r\n        .then((response) => {\r\n          console.log(\"response in ::\", response);\r\n\r\n          console.log(\"length\", response.length);\r\n          console.log(\"response.addressDtoList ::\",response.addressDtoList);\r\n          setAddressData(response.addressDtoList);\r\n          console.log(\"addressData\", addressData);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\");\r\n        });\r\n    };\r\n\r\n    loadAddress();\r\n  }, [data,render]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"rendered\");\r\n  }, [searchData]);\r\n\r\n \r\n\r\n  const onSubmit = (f) => {\r\n    console.log(\"form\", f);\r\n\r\n    let finalURL = remoteBaseUrl + \"?searchField=\" + f.searchField;\r\n\r\n    let obj = {\r\n      url: finalURL,\r\n    };\r\n    getHttp(obj, true).then((response) => {\r\n      console.log(\"search response ::\", response);\r\n      setSearchData(response);\r\n      setAddressData(response);\r\n      setPstate(pstate + 1);\r\n    });\r\n  };\r\n\r\n  const refresh = (e) => {\r\n    console.log(\"heloo add address\")\r\n    setRender(render + 1);\r\n  \r\n    \r\n  }\r\n\r\n  return (\r\n    <Formik initialValues={formvalues} onSubmit={onSubmit}>\r\n      {(formik) => {\r\n        fmk = formik;\r\n        return (\r\n          <>\r\n           \r\n              <Form autoComplete=\"off\">\r\n              <div className=\"row\">\r\n               \r\n                  <div className=\"col-md\">\r\n                    <TextInput\r\n                      label=\"search\"\r\n                      name={\"searchField\"}\r\n                      id={\"searchField\"}\r\n                      helperText=\" \"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md\">\r\n                    <AppButton\r\n                      text={\"Search\"}\r\n                      type={\"submit\"}\r\n                      icon=\"search\"\r\n                    ></AppButton>\r\n                  </div>\r\n                </div>\r\n                <Typography variant=\"subtitle1\">SAVED ADDRESS</Typography>\r\n              <br></br>\r\n             <Grid container  \r\n                    spacing={4}>\r\n                <Grid\r\n                  style={{width:\"182px\"}}\r\n                     item\r\n                  xs={2}\r\n                    // sm={6}\r\n                    // md={4}\r\n                    //key={addressData.indexOf(address)}\r\n                    container\r\n                    spacing={0}\r\n                    //class=\"dotted\"\r\n                  >\r\n                    <Fragment>\r\n                      \r\n                    <AddAddressCard render= {refresh}/>\r\n                   \r\n                    </Fragment>\r\n                  </Grid>\r\n                  {( addressData!== undefined ) &&\r\n                    addressData.map((address, inx) => (\r\n                      // <div className=\"col-md-4\" key={inx}>\r\n\r\n                      <Grid\r\n                     \r\n                        item\r\n                        \r\n                         xs={2}\r\n                        // md={4}\r\n                        key={addressData.indexOf(address)}\r\n                        container\r\n                        spacing={0}\r\n                      >\r\n                        <Grid \r\n                          style={{width:\"182px\"}}>\r\n                        <AddressCard\r\n                          address={address}\r\n                          editFlag=\"true\"\r\n                          deleteFlag=\"true\"\r\n                          render={refresh}\r\n                          saved={(e) => {\r\n                            //  this.forceUpdate();\r\n                            // setShowPopup(NO_DIALOG);\r\n                            //   props.saved('xyz')\r\n                            console.log(\"rendered....\");\r\n                            setData(e);\r\n                          }}\r\n                          divider=\"\"\r\n                          />\r\n                          </Grid>\r\n                      </Grid>\r\n                    ))\r\n                  }\r\n                 \r\n                  {/* <AddAddressCard /> */}\r\n                </Grid>\r\n              </Form>\r\n            \r\n          </>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default AddAddress;"],"sourceRoot":""}