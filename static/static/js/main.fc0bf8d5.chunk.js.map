{"version":3,"sources":["lib/redux/loginUserData/loginUserType.js","lib/common/Constants.js","lib/redux/messagebar/messagebarType.js","lib/redux/spinner/spinActions.js","lib/components/txtinput/ApplnTxtInput.tsx","lib/redux/spinner/spinType.js","lib/redux/container/containerType.js","lib/common/HttpService.tsx","lib/redux/cake/cakeReducer.js","lib/redux/icecream/iceReducer.js","lib/redux/user/userReducer.js","lib/redux/spinner/spinReducer.js","lib/redux/messagebar/messagebarReducer.js","lib/redux/breadcrumb/breadCrumbReducer.js","lib/redux/loginUserData/loginUserReducer.js","lib/redux/container/containerReducer.js","lib/redux/rootReducer.js","lib/redux/store.js","utils/ptmsEndpoints.js","lib/redux/cake/cakeType.js","lib/redux/icecream/iceType.js","lib/redux/breadcrumb/breadCrumbType.js","lib/components/buttons/appButton.tsx","lib/components/dialog/dialogBox.tsx","lib/components/icons/clearIcon.js","lib/common/theme/theme.js","components/Home.js","service/ConfirmUserDetailsService.js","components/ConfirmDetailsPopUp.js","lib/common/storeAccess.js","lib/components/spinner/spinner.js","lib/components/breadcrumb/appBreadCrumb.js","lib/components/spinner/AppSkeleton.js","lib/common/lazyComponentLoad.js","lib/common/AuthUser.js","App.js","index.js","lib/redux/loginUserData/loginUserActions.js","lib/redux/messagebar/messagebarActions.js","lib/redux/breadcrumb/breadCrumbActions.js","lib/redux/user/userType.js"],"names":["LOGIN_USER_SUCCESS","REFRESH_USER_SUCCESS","SESSION_EXPIRED","COLUMN_TYPE_NUMBER","COLUMN_TYPE_STRING","ALERT_DIALOG","CONFIRM_DIALOG","OTHER_POPUP","NO_DIALOG","SHOW_MESSAGE_BAR","HIDE_MESSAGE_BAR","INFO","ERROR","SUCCESS","WARNING","showSpinner","type","SHOW_SPINNER","hideSpinner","HIDE_SPINNER","useStyles","makeStyles","txtDiv","display","iconDiv","width","position","top","fontSize","txtField","ApplnTxtInput","name","label","fieldIcon","methods","React","useRef","useFormContext","errors","getValues","setValue","classes","useEffect","icon","console","log","onClick","trigger","className","id","placeholder","inputRef","register","autoComplete","fullWidth","error","helperText","message","InputProps","endAdornment","BOOK_CONTAINER","CANCEL_CONTAINER","axios","interceptors","response","use","res","status","postHttp","obj","showLoading","accessToken","getLoginUserAccessToken","config","headers","access_token","params","locale","startLoading","post","url","body","then","endLoading","data","catch","getHttp","paramValues","get","statusText","getHttpAsync","a","intialState","nc","cakeReducer","state","action","BUY_CAKE","payload","ice","iceReducer","BUY_ICE","initialState","loading","users","userReducer","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","spinReducer","messages","messageType","show","messagebarReducer","crumbs","breadcrumbReducer","UPDATE_BC","user","refresh_token","expires_in_seconds","created_Time","Date","user_type","userDetails","email","landLineNumber","mobileNumber","confirmDetails","firstName","lastName","login","loginUserReducer","created_time","userType","containerNumber","booked","containerReducer","rootReducer","combineReducers","cake","iceCream","spinner","messagebar","breadcrumb","loginUser","containerBook","store","createStore","applyMiddleware","thunk","apiBaseUrl","fetchDriversForTransporter","fetchTrucksForTransporter","fetchTruckByUserTypes","saveTruckAndDriverInfo","deleteTruckAggregrator","updateDriver","createDriver","fetchRequestDetails","createVehicleTypes","fetchContainerDetailsForTrip","updateToken","updateTrip","updateTruck","createTruck","updateRequestTruckType","fetchConfirmDetailsPage","fetchAddress","createAddress","updateAddress","deleteAddress","saveUserDetails","fetchVehicleType","fetchContainerCount","fetchAddressList","fetchContainerSummaryAndPayment","saveRequest","fetchZone","countRequestDetailsByStatus","groupAndSendForApproval","sendJobsForApproval","fetchConsigneeDetails","countSettlements","fetchSettlements","countJobs","downloadReceipt","fetchInvoice","fetchPendingTokenJobs","fetchPendingPODJobs","fetchPod","approvePod","searchJobs","startJob","fetchEtoken","rejectPod","fetchInvoiceSubmittedJobs","fetchInvoiceApprovedJobs","approveInvoice","rejectInvoice","requestForToken","markJobAsPaid","loadEmptyInContainers","searchContainerAndJob","updateTokenInDetails","reInitialise","countExpiredRequests","countPendingTokenJobs","countTrucks","cancelContainer","updateRequestContainerDetails","searchContainer","fetchTransporters","theme","button","borderRadius","textTransform","memo","props","handleClick","disabled","text","size","css","variant","color","AppDialog","styles","dialogPaper","minHeight","handleClose","e","onClose","open","this","isopen","style","left","right","title","children","alignSelf","isConfirm","isDialog","disable","confirmTxt","openIcon","confirmButtonCss","onConfirm","closeTxt","closeIcon","closeButtonCss","Component","defaultProps","isAlert","cursor","createMuiTheme","palette","primary","main","secondary","background","default","danger","orange","overrides","typography","fontFamily","subtitle1","body2","h1","h2","MuiButton","root","boxShadow","containedPrimary","MuiOutlinedInput","borderColor","borderWidth","MuiInputLabel","MuiSvgIcon","fill","MuiLink","MuiInputBase","input","Home","useState","showPopup","setShowPopup","setUserDetails","userData","useSelector","useHistory","getUserDetails","formData","endpointContants","formvalues","setFormvalues","key","setKey","confirmDetailsForm","schema","Yup","required","matches","DataForm","intialVals","useForm","resolver","yupResolver","mode","reValidateMode","defaultValues","formState","isValid","values","encryptedUsername","activeCompanyCode","ConfirmUserDetailsService","saveFormData","isAxiosError","Error","userName","getStoreState","getState","invokeStoreMethod","method","dispatch","getLoginUserType","zIndex","linearSpinner","connect","LinearProgress","Backdrop","bc","useDispatch","Paper","Breadcrumbs","aria-label","map","crumb","i","Link","to","active","outer","padding","level1","level2","marginTop","marginBottom","level3","Container","Skeleton","animation","height","lazyComponentLoad","mycomponent","component","cmp","setState","C","AuthUser","setTimeout","adminHomeAsync","transporterHomeAsync","importerHomeAsync","tripAsync","requestMainAsync","assignTruckAndDriverAsync","manageVehicleTypes","transporterAsync","manageTruckAggregatorAsync","manageDriverAsync","viewRequestsForTransporter","manageTrip","booking","manageTruckAsync","manageAddressAsync","saveRequestAsync","confirmationAsync","failConfirmationAsync","stepperAsync","deliverContainerAsync","selectLocationsAsync","testingAsync","truckTypeAsync","transporterDashBoard","viewRequest","searchRequests","assignTrucks","jobDetails","assignDriver","jobDetailsCard","assignDriverSubForm","uploadDocument","myJobs","settlements","settlementSummary","claimSummary","fileUpload","assignTokentoJob","jobCard","assignToken","adminDashBoard","expiredJobs","SearchDetails","verifyDocument","assignTrucksForAdmin","trucksAvailable","App","userLogin","basename","path","exact","render","routeProps","ReactDOM","ThemeProvider","CssBaseline","document","getElementById","loginUserSuccess","windowUrl","window","location","search","URLSearchParams","agent_code","agent_type","agentCode","agentType","token","validity","remoteUrl","dataItems","showMessageBar","hideMessageBar","updateBC","num"],"mappings":"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","file":"static/js/main.fc0bf8d5.chunk.js","sourcesContent":["export const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const REFRESH_USER_SUCCESS = 'REFRESH_USER_SUCCESS';\r\nexport const CONFIRM_USER_DETAILS = 'CONFIRM_USER_DETAILS';\r\nexport const SESSION_EXPIRED = 'SESSION_EXPIRED';","export const SUCCESS_MSG = 0;\r\nexport const ERROR_MSG = 1;\r\nexport const INFO_MSG = 2;\r\nexport const WARNING_MSG = 3;\r\nexport const COLUMN_TYPE_NUMBER = 1;\r\nexport const COLUMN_TYPE_STRING = 0;\r\nexport const COLUMN_TYPE_DATE = 2;\r\nexport const ALERT_DIALOG = 21;\r\nexport const CONFIRM_DIALOG = 22;\r\nexport const OTHER_POPUP = 23;\r\nexport const NO_DIALOG = 20;\r\nexport const VIEW = 51;\r\nexport const AMEND = 52;\r\nexport const DEL = 53;\r\nexport const CREATE = 54;\r\n","export const SHOW_MESSAGE_BAR = 'SHOW_MESSAGE_BAR';\r\nexport const HIDE_MESSAGE_BAR = 'HIDE_SPINNER_BAR';\r\nexport const INFO = 2;\r\nexport const ERROR = 1;\r\nexport const SUCCESS = 0;\r\nexport const WARNING = 3;","import { SHOW_SPINNER, HIDE_SPINNER } from \"./spinType\"\r\n\r\nexport const showSpinner = () => {\r\n    return {\r\n        type: SHOW_SPINNER\r\n    }\r\n}\r\n\r\nexport const hideSpinner = () => {\r\n    return {\r\n        type: HIDE_SPINNER\r\n    }\r\n}\r\n\r\n","import { TextField, makeStyles, Icon } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { ElementInputProps } from \"../../common/ElementInputProps\";\r\nimport \"./textInput.css\";\r\nimport ClearIcon from \"../icons/clearIcon\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  txtDiv: {\r\n    display: \"flex\",\r\n  },\r\n  iconDiv: {\r\n    width: \"10%\",\r\n    \"& span\": {\r\n      position: \"absolute\",\r\n      top: \"40%\",\r\n      fontSize: \"16px\",\r\n    },\r\n  },\r\n  txtField: {},\r\n}));\r\n\r\nconst ApplnTxtInput: React.FC<ElementInputProps> = ({\r\n  name,\r\n  label,\r\n  fieldIcon,\r\n  type = \"text\",\r\n}) => {\r\n  const renders = React.useRef(0);\r\n  const methods = useFormContext();\r\n  const { errors, getValues, setValue } = methods;\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {}, []);\r\n\r\n  const handleIconClick = () => {\r\n    setValue(name, \"\");\r\n    methods.trigger(name);\r\n  };\r\n\r\n  let icon = null;\r\n  console.log(\" IN Txt field\");\r\n\r\n  if (getValues(name)) {\r\n    icon = <ClearIcon onClick={handleIconClick} />;\r\n  } else {\r\n    icon = null;\r\n  }\r\n  return (\r\n    <>\r\n      <div className={classes.txtDiv}>\r\n        {fieldIcon && (\r\n          <div className={classes.iconDiv}>\r\n            <Icon>{fieldIcon}</Icon>\r\n          </div>\r\n        )}\r\n        <TextField\r\n          id={name}\r\n          className={classes.txtField}\r\n          label={label}\r\n          placeholder={label}\r\n          name={name}\r\n          inputRef={methods.register()}\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          type={type}\r\n          error={errors[name] ? true : false}\r\n          helperText={errors[name]?.message}\r\n          InputProps={{\r\n            endAdornment: icon,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplnTxtInput;\r\n","export const SHOW_SPINNER = 'SHOW_SPINNER';\r\nexport const HIDE_SPINNER = 'HIDE_SPINNER';","export const BOOK_CONTAINER = 'BOOK_CONTAINER';\r\nexport const CANCEL_CONTAINER = 'CANCEL_CONTAINER';","import axios from \"axios\"\r\nimport { startLoading, endLoading, getLoginUserAccessToken } from \"./storeAccess\";\r\n\r\n\r\ninterface HttpParam {\r\n    url: string;\r\n    body?: string;\r\n    paramValues?:any\r\n}\r\n\r\naxios.interceptors.response.use(res => {\r\n    return res;\r\n}, (error) => {\r\n        switch (error.response.status) {\r\n       \r\n        case 408:\r\n             console.log('Session Expired');\r\n             break;\r\n       \r\n        default:\r\n            \r\n   }\r\n//return Promise.reject(error);\r\n        return error;\r\n});\r\n\r\nexport const postHttp = (obj: HttpParam, showLoading = true) => {\r\n    let accessToken = getLoginUserAccessToken();\r\n\r\n    let config = {\r\n        headers: {\r\n            access_token: accessToken,\r\n        },\r\n        params: {\r\n            locale: 'en'\r\n          }\r\n    }\r\n    if (showLoading === true)\r\n        startLoading();\r\n\r\n    return axios.post(obj.url, obj.body, config)\r\n        .then(response => {\r\n            endLoading();\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            endLoading();\r\n           console.log(\"Error on post resquest \" ,error?.response?.data);\r\n            return error?.response?.data;\r\n        })\r\n\r\n}\r\n\r\nexport const getHttp = (obj: HttpParam, showLoading = true) => {\r\n\r\n    let accessToken = getLoginUserAccessToken();\r\n\r\n\r\n\r\n    let config = {\r\n        headers: {\r\n            access_token: accessToken,\r\n        },\r\n        params: {\r\n           ...obj.paramValues,\r\n            locale: 'en'\r\n          }\r\n    }\r\n    if (showLoading === true)\r\n        startLoading();\r\n\r\n    return axios.get(obj.url, config)\r\n        .then(response => {\r\n            endLoading();\r\n            console.log(\"response is \")\r\n            return response?.data;\r\n        })\r\n        // .then(response => {\r\n        //     endLoading();\r\n        //     return response;\r\n        // })\r\n        .catch(error => {\r\n            endLoading();\r\n            console.log(\"Error on get resquest ***\" );\r\n\r\n            return error?.response?.statusText;\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const getHttpAsync = async (obj: HttpParam, showLoading = true) => {\r\n\r\n    let accessToken = getLoginUserAccessToken();\r\n    let data = '';\r\n    let config = {\r\n        headers: {\r\n            access_token: accessToken,\r\n        }\r\n    }\r\n    if (showLoading === true)\r\n        startLoading();\r\n\r\n    try {\r\n        const response = await axios.get(obj.url, config);\r\n        data = await response.data;\r\n    } catch (error) {\r\n        data = error;\r\n    }\r\n    endLoading();\r\n    return data;\r\n}\r\n\r\n// export const getHttp2 = (obj, showLoading = true) => {\r\n\r\n//     if (showLoading === true)\r\n//         startLoading();\r\n\r\n//     return new Promise((resolve,reject)=>{\r\n\r\n//     })\r\n//     return axios.get(obj.url)\r\n//     // .then(response => {\r\n//     //     endLoading();\r\n//     //     return response.data;\r\n//     // })\r\n//     // .catch(error => {\r\n//     //     endLoading();\r\n//     //     return error;\r\n\r\n//     // })\r\n\r\n// }\r\n\r\n","import { BUY_CAKE } from \"./cakeType\"\r\n\r\nconst intialState = {\r\n    nc: 10\r\n}\r\n\r\nconst cakeReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case BUY_CAKE: return {\r\n            ...state,\r\n            nc: state.nc - action.payload\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default cakeReducer;","import { BUY_ICE } from \"./iceType\"\r\n\r\nconst intialState = {\r\n    ice: 20\r\n}\r\n\r\nconst iceReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case BUY_ICE: return {\r\n            ...state,\r\n            ice: state.ice - 1\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default iceReducer;","import { FETCH_USER_REQUEST, FETCH_USER_FAILURE, FETCH_USER_SUCCESS } from \"./userType\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    users: [],\r\n    error: ''\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            return {\r\n                error: '',\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case FETCH_USER_FAILURE:\r\n            return {\r\n                users: [],\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { SHOW_SPINNER, HIDE_SPINNER } from \"./spinType\"\r\n\r\nconst intialState = {\r\n    loading: false\r\n}\r\n\r\nconst spinReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_SPINNER: return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case HIDE_SPINNER: return {\r\n            ...state,\r\n            loading: false\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default spinReducer;","import { SHOW_MESSAGE_BAR, HIDE_MESSAGE_BAR } from \"./messagebarType\"\r\n\r\n\r\n\r\nconst intialState = {\r\n    messages: [],\r\n    messageType: 0,\r\n    show: false\r\n}\r\n\r\nconst messagebarReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_MESSAGE_BAR: return {\r\n            ...state,\r\n            messages: action.payload,\r\n            messageType: action.messageType,\r\n            show: true\r\n        }\r\n        case HIDE_MESSAGE_BAR: return {\r\n            ...state,\r\n            messages: [],\r\n            messageType: 0,\r\n            show: false\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default messagebarReducer;","import { UPDATE_BC } from \"./breadCrumbType\"\r\n\r\nconst intialState = {\r\n    crumbs: []\r\n}\r\n\r\nconst breadcrumbReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_BC: return {\r\n            ...state,\r\n            crumbs: action.payload\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default breadcrumbReducer;","import { LOGIN_USER_SUCCESS, REFRESH_USER_SUCCESS, CONFIRM_USER_DETAILS, SESSION_EXPIRED } from \"./loginUserType\"\r\n\r\nconst initialState = {\r\n    user: {\r\n        access_token: '',\r\n        refresh_token: '',\r\n        expires_in_seconds: 900000,\r\n        created_Time: new Date(),\r\n        user_type:'',\r\n        userDetails: {\r\n            email: '',\r\n            landLineNumber: '',\r\n            mobileNumber: '',\r\n            confirmDetails: false,\r\n            firstName:'',\r\n            lastName:'',\r\n        }\r\n    },\r\n    login: false\r\n}\r\n\r\nconst loginUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                user: {\r\n                    access_token: action.payload.access_token,\r\n                    refresh_token: action.refresh_token,\r\n                    created_time: new Date(),\r\n                    expires_in_seconds: 900000,\r\n                    userDetails: action.payload.userDetails? action.payload.userDetails: {\r\n                        email: '',\r\n                        landLineNumber: '',\r\n                        mobileNumber: '',\r\n                        confirmDetails: false,\r\n                        firstName:'',\r\n                        lastName:''\r\n                    },\r\n                    user_type:action.payload.user_type\r\n                },\r\n                login: true\r\n            }\r\n        case REFRESH_USER_SUCCESS:\r\n            return {\r\n                user: {\r\n                    access_token: action.payload.access_token,\r\n                    refresh_token: action.payload.refresh_token,\r\n                    created_time: new Date(),\r\n                    expires_in_seconds: 900000,\r\n                    userDetails: action.payload.userDetails,\r\n                    userType:action.payload.userType\r\n                },\r\n                login: true\r\n            }\r\n            case SESSION_EXPIRED:\r\n                return {\r\n                    user: {\r\n                        access_token: '',\r\n\r\n                        \r\n                    },\r\n                    login: false\r\n                   \r\n                }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default loginUserReducer;","import { BOOK_CONTAINER, CANCEL_CONTAINER } from \"./containerType\"\r\n\r\n\r\n\r\nconst intialState = {\r\n    containerNumber: [],\r\n    booked: false\r\n}\r\n\r\nconst containerReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case BOOK_CONTAINER: return {\r\n            ...state,\r\n            containerNumber: action.payload,\r\n            booked: true\r\n        }\r\n        case CANCEL_CONTAINER: return {\r\n            ...state,\r\n            containerNumber: action.payload,\r\n            booked: false\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default containerReducer;","import { combineReducers } from 'redux';\r\nimport cakeReducer from './cake/cakeReducer';\r\nimport iceReducer from './icecream/iceReducer';\r\nimport userReducer from './user/userReducer';\r\nimport spinReducer from './spinner/spinReducer';\r\nimport messagebarReducer from './messagebar/messagebarReducer';\r\nimport breadcrumbReducer from './breadcrumb/breadCrumbReducer';\r\nimport loginUserReducer from './loginUserData/loginUserReducer';\r\nimport containerReducer from './container/containerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    cake: cakeReducer,\r\n    iceCream: iceReducer,\r\n    user: userReducer,\r\n    spinner: spinReducer,\r\n    messagebar: messagebarReducer,\r\n    breadcrumb: breadcrumbReducer,\r\n    loginUser: loginUserReducer,\r\n    containerBook: containerReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;","export const apiBaseUrl = \"/ptms/app/api/secure/\";\r\nexport const fetchDriversForTransporter = apiBaseUrl + \"transporter/fetchDriver\";\r\nexport const fetchTrucksForTransporter = apiBaseUrl + \"transporter/fetchTruck\";\r\nexport const fetchTruckByUserTypes = apiBaseUrl + \"transporter/fetchTruckByUserTypes\";\r\nexport const saveTruckAndDriverInfo =\r\n  apiBaseUrl + \"requestDetails/updateRequestForTransporter\";\r\nexport const deleteTruckAggregrator = apiBaseUrl + \"truckAggregator/delete\";\r\nexport const updateDriver = apiBaseUrl + \"driver/update\";\r\nexport const createDriver = apiBaseUrl + \"driver/create\";\r\nexport const searchRequestBoesForTransporter = apiBaseUrl + \"searchRequestBoes\";\r\nexport const fetchRequestDetails =\r\n  apiBaseUrl + \"requestDetails/viewRequestContainers\";\r\nexport const createVehicleTypes = apiBaseUrl + \"vehicleType/create\";\r\nexport const checkForExistingTrip = apiBaseUrl + \"trip/checkForExistingTrip\";\r\nexport const fetchContainerDetailsForTrip=apiBaseUrl+\"trip/fetchContainerInfoForTrip\";\r\nexport const updateToken = apiBaseUrl + \"trip/updateToken\";\r\nexport const updateVehcileTypes = apiBaseUrl + \"vehicleType/update\";\r\nexport const updateTrip = apiBaseUrl + \"trip/updateTrip\";\r\nexport const updateTruck = apiBaseUrl + \"truck/update\";\r\nexport const createTruck = apiBaseUrl + \"truck/create\";\r\nexport const updateRequestTruckType = apiBaseUrl + \"requestTruckType/update\";\r\nexport const fetchConfirmDetailsPage = apiBaseUrl + \"fetchConfirmDetails\";\r\nexport const fetchAddress = apiBaseUrl + \"address/fetchDetails\";\r\nexport const createAddress = apiBaseUrl + \"address/create\";\r\nexport const updateAddress = apiBaseUrl + \"address/update\";\r\nexport const deleteAddress = apiBaseUrl + \"address/delete\";\r\nexport const saveUserDetails = apiBaseUrl + \"user/confirmDetails\";\r\n\r\nexport const fetchVehicleType = apiBaseUrl + \"vehicleType/fetchAll\";\r\n\r\nexport const fetchContainerCount = apiBaseUrl + \"boe/fetchContainerCount\";\r\nexport const fetchAddressList = apiBaseUrl + \"address/addressList\";\r\nexport const fetchContainerSummaryAndPayment=apiBaseUrl+\"boe/fetchContainerSummaryAndPayment\";\r\nexport const saveRequest=apiBaseUrl+\"requestDetails/saveRequestDetails\";\r\nexport const fetchZone=apiBaseUrl+\"zone/fetchAll\";\r\nexport const countRequestDetailsByStatus=apiBaseUrl+\"requestDetails/countRequestDetailsByStatus\";\r\nexport const groupAndSendForApproval=apiBaseUrl+\"transporter/groupAndSendForApproval\";\r\nexport const sendJobsForApproval=apiBaseUrl+\"transporter/sendJobsForApproval\";\r\nexport const fetchConsigneeDetails=apiBaseUrl+\"consignee/fetchConsigneeDetails\";\r\nexport const countSettlements=apiBaseUrl+\"transporter/countSettlementStatus\";\r\nexport const fetchSettlements = apiBaseUrl + \"trip/fetchSettlements\";\r\nexport const countJobs = apiBaseUrl + \"transporter/countJobStatus\";\r\nexport const downloadReceipt = \"/ptms/app/api/public/certificate/paymentReceipt\";\r\nexport const fetchInvoice = apiBaseUrl + \"trip/fetchInvoice\";\r\nexport const fetchPendingTokenJobs = apiBaseUrl + \"trip/searchJobs?jobStatus=PTOK\";\r\nexport const fetchPendingPODJobs = apiBaseUrl + \"trip/searchForDocVerify?containerStatus=PODUPL\";\r\nexport const fetchPod = apiBaseUrl + \"requestContainerDetails/fetchPod\";\r\nexport const approvePod = apiBaseUrl + \"requestContainerDetails/approvePod\";\r\nexport const searchJobs = apiBaseUrl + \"trip/searchJobs\";\r\nexport const startJob = apiBaseUrl + \"trip/startJob\";\r\nexport const fetchEtoken = apiBaseUrl + \"requestContainerDetails/fetchEtoken\";\r\nexport const rejectPod = apiBaseUrl + \"requestContainerDetails/rejectPod\";\r\nexport const fetchInvoiceSubmittedJobs= apiBaseUrl + \"trip/fetchInvoiceSubmittedJobs\";\r\nexport const fetchInvoiceApprovedJobs= apiBaseUrl + \"trip/fetchInvoiceApprovedJobs\";\r\nexport const approveInvoice= apiBaseUrl + \"trip/approveInvoice\";\r\nexport const rejectInvoice = apiBaseUrl + \"trip/rejectInvoice\";\r\nexport const requestForToken= apiBaseUrl + \"requestContainerDetails/requestForToken\";\r\nexport const markJobAsPaid=apiBaseUrl + \"trip/markJobAsPaid\";\r\nexport const loadEmptyInContainers = apiBaseUrl + \"trip/loadEmptyInContainers\";\r\nexport const searchContainerAndJob = apiBaseUrl + \"trip/searchContainerAndJob\";\r\nexport const updateTokenInDetails=apiBaseUrl + \"trip/updateTokenInDetails\";\r\nexport const reInitialise=apiBaseUrl+\"requestDetails\";\r\nexport const countExpiredRequests=apiBaseUrl+\"trip/countExpiredRequests\";\r\nexport const countPendingTokenJobs = apiBaseUrl + \"trip/countPendingTokenJobs\";\r\nexport const countTrucks = apiBaseUrl + \"transporter/countTrucks\";\r\nexport const cancelContainer = apiBaseUrl + \"requestContainerDetails/cancel\";\r\nexport const updateRequestContainerDetails = apiBaseUrl + \"requestContainerDetails/updateRequestContainerDetails\";\r\nexport const searchContainer = apiBaseUrl + \"requestDetails/fetchAllRequestDetails\";\r\nexport const  fetchTransporters = apiBaseUrl + \"transporter/fetchTransporters\";\r\n\r\n","export const BUY_CAKE = 'BUY_CAKE';","export const BUY_ICE = 'BUY_ICE';","export const UPDATE_BC = 'UPDATE_BC';","import { Icon, makeStyles } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport React from \"react\";\r\nimport theme from \"../../common/theme/theme\";\r\n\r\ntype MyButtonProps =\r\n    {\r\n        type?: any,\r\n        disabled?: boolean,\r\n        text?: string,\r\n        handleClick?(e: any): void,\r\n        color?: string,\r\n        icon?: string,\r\n        size?: \"medium\",\r\n        css?: any\r\n    }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        borderRadius:'10px',\r\n        textTransform: \"none\",\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst AppButton: React.FC<MyButtonProps> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const { type, handleClick, disabled, text, icon = 'send',size, css} = props;\r\n    const renders = React.useRef(100);\r\n\r\n    return (\r\n        <>\r\n            {/* <span>renders:{renders.current++}</span> */}\r\n\r\n            {/* <Button variant=\"contained\" color=\"primary\"\r\n                type={type} onClick={handleClick}\r\n                disabled={disabled}>\r\n                {text}\r\n            </Button> */}\r\n            <Button \r\n                type={type} onClick={handleClick} className={css}  \r\n                variant=\"contained\"  disabled={disabled} size={size} color=\"primary\"> \r\n                {text}\r\n            </Button>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(AppButton);\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@material-ui/core\";\r\nimport './dialog.css';\r\nimport AppButton from '../buttons/appButton';\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\n\r\ntype DialogProps =\r\n    {\r\n        title?: string;\r\n        body?: string;\r\n        closeTxt?: string;\r\n        confirmTxt?: string;\r\n        isopen: boolean;\r\n        onClose?(e: any): void;\r\n        onConfirm?(e: any): void;\r\n        onCancel?(e: any): void;\r\n        isAlert?: boolean;\r\n        isConfirm?: boolean;\r\n        isDialog?: boolean;\r\n        disable?: boolean;\r\n        closeIcon?:string;\r\n        openIcon?:string;\r\n        confirmButtonCss?:any;\r\n        closeButtonCss?:any;\r\n    };\r\n\r\nexport class AppDialog extends Component<DialogProps> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    static defaultProps = {\r\n        isopen: true,\r\n        isAlert: false,\r\n        isConfirm: false,\r\n        isDialog: false,\r\n        confirmTxt: 'Confirm',\r\n        closeTxt: 'Close',\r\n    }\r\n    styles = {\r\n        dialogPaper: {\r\n            minHeight: '80vh'\r\n        },\r\n    };\r\n    handleClose = (e: any) => {\r\n        this.props.onClose(e);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          \r\n            <Dialog open={this.props.isopen} style={{ width: \"500px\",left:\"30%\",right:\"50%\"}} >\r\n                <DialogTitle id=\"customized-dialog-title\">\r\n                    {this.props.title}\r\n                    {/* <IconButton className=\"icon-button\" aria-label=\"close\" onClick={this.handleClose}>\r\n                        <Icon>close</Icon>\r\n                    </IconButton> */}\r\n                </DialogTitle>\r\n                <DialogContent >\r\n                    {this.props.children}\r\n                    \r\n                </DialogContent>\r\n                <DialogActions style={{ alignSelf: \"center\" }}>\r\n                {(this.props.isConfirm || this.props.isDialog) &&\r\n                        <AppButton disabled = {this.props.disable} type=\"submit\" color=\"#73BF7E\" \r\n                        text={this.props.confirmTxt} icon={this.props.openIcon} css={this.props.confirmButtonCss}\r\n                        handleClick={(e: any) => {\r\n                            this.props.onConfirm(e);\r\n                        }} />\r\n                    }\r\n                    {this.props.closeTxt && <AppButton color=\"#E95A57\" type=\"button\" text={this.props.closeTxt} handleClick={this.handleClose} \r\n                    icon={this.props.closeIcon} css={this.props.closeButtonCss} />}\r\n\r\n                  \r\n\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { ClearOutlined } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        fontSize: \"18px\",\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n\r\n}));\r\n\r\nfunction ClearIcon(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <ClearOutlined className={classes.icon} onClick={props.onClick} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ClearIcon);\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#0E1B3D\",\r\n        },\r\n        secondary: {\r\n            main: \"#0568AE\"\r\n        },\r\n        background: {\r\n            default: \"#FFFFFF\"\r\n        }\r\n    },\r\n    status: {\r\n        danger: orange\r\n    },\r\n    overrides: {\r\n    },\r\n    typography: {\r\n        fontFamily: \"Dubai Regular\",\r\n        fontSize:16,\r\n        subtitle1: {\r\n            fontSize: 20,\r\n            color:'#0E1B3D',\r\n            fontFamily: \"Dubai Medium\",\r\n          },\r\n    \r\n        body2:\r\n        {\r\n            fontSize: 16,\r\n            fontFamily: \"Dubai Regular\",\r\n        },\r\n     \r\n      h1:\r\n      {\r\n          fontSize: 24,\r\n          fontFamily: \"Dubai Medium\",\r\n      },\r\n\r\n      h2:\r\n      {\r\n          fontSize: 24,\r\n          fontFamily: \"Dubai Medium\",\r\n          color: '#0568AE'\r\n      }\r\n\r\n\r\n        }\r\n       \r\n    \r\n    \r\n\r\n\r\n   \r\n\r\n});\r\n\r\ntheme.overrides = {\r\n\r\n\r\n\r\n    MuiButton: {\r\n      root: {\r\n        borderRadius: '8px', \r\n        textTransform: 'none', // removes uppercase transformation\r\n        boxShadow:'0px 1px 4px #00000029',\r\n        color:'#FFFFFF',\r\n\r\n        fontSize:'18px',\r\n\r\n        fontFamily:'Dubai Medium'\r\n\r\n      \r\n  \r\n      },\r\n      containedPrimary: {\r\n          background: \"transparent linear-gradient(180deg, #1E84EA 0%, #2673CE 67%, #364F91 100%) 0% 0% no-repeat padding-box;\",\r\n  \r\n          \r\n        },\r\n  \r\n      \r\n  \r\n    \r\n    },\r\n\r\n    MuiOutlinedInput: {\r\n        root: {\r\n        \r\n          // position: \"relative\",\r\n          // \"& $notchedOutline\": {\r\n          //   borderColor: \"#2EFF22\"\r\n          //},\r\n          \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\r\n            borderColor: \"#0568AE\",\r\n            // Reset on touch devices, it doesn't add specificity\r\n            \"@media (hover: none)\": {\r\n              borderColor: \"#0568AE\",\r\n            },\r\n          },\r\n          \"&$focused $notchedOutline\": {\r\n            borderColor: \"#0568AE\",\r\n            borderWidth: 1.5,\r\n          },\r\n        },\r\n      },\r\n\r\n      MuiInputLabel: {\r\n        root: {\r\n         fontSize:'16px',\r\n         color:'#000000',\r\n         fontFamily: \"Dubai Regular\",\r\n        },\r\n\r\n    },\r\n\r\n    MuiSvgIcon:{\r\n  root: {\r\n    fill:\"#0568AE\"\r\n  }\r\n  },\r\n    \r\n    MuiLink:{\r\n        root:{\r\n          fontFamily: \"Dubai Regular\",\r\n            cursor:'pointer',\r\n            color:'#0568AE'\r\n        }\r\n    },\r\n\r\n   MuiInputBase: {\r\n     input: {\r\n      fontSize:'16px',\r\n      fontFamily: 'Dubai Regular',\r\n   },\r\n   }\r\n  \r\n  \r\n  \r\n   \r\n\r\n\r\n\r\n    };\r\n\r\n\r\nexport default theme;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NO_DIALOG } from '../lib/common/Constants';\r\nimport { OTHER_POPUP } from './../lib/common/Constants';\r\nimport ConfirmDetailsPopUp from './ConfirmDetailsPopUp';\r\nimport { getUserDetails } from \"../lib/common/storeAccess\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Home() {\r\n\r\n\r\n  const [showPopup, setShowPopup] = useState(NO_DIALOG);\r\n  const[userDetails,setUserDetails]=useState([]);\r\n  const userData= useSelector(state => state.loginUser);\r\n\r\n  \r\n \r\n  let history = useHistory();\r\n\r\n\r\n  useEffect(() => {\r\n    if(getUserDetails().confirmDetails)\r\n    {\r\n      setUserDetails(getUserDetails());\r\n      setShowPopup(OTHER_POPUP);\r\n    \r\n    }\r\n    else\r\n    {\r\n      console.log(\"flag value\",getUserDetails())\r\n    }\r\n  }, [userData]);\r\n\r\nreturn(\r\n<>\r\n  <ConfirmDetailsPopUp isopen={showPopup === OTHER_POPUP} userDetails={userDetails}  onClose={(e) => {\r\n    setShowPopup(NO_DIALOG);\r\n  }} />\r\n</>\r\n\r\n)\r\n}\r\n\r\nexport default Home;\r\n","import { postHttp } from '../lib/common/HttpService';\r\nimport * as endpointContants from '../utils/ptmsEndpoints';\r\n\r\nclass ConfirmUserDetailsService {\r\n\r\nsaveFormData(formData) {\r\n\r\n    const remoteUrl = endpointContants.saveUserDetails ;\r\n\r\n    let obj =  { url: remoteUrl ,\r\n        body:formData\r\n     };\r\n\r\n   return  postHttp(obj, true).catch(error => {\r\n\r\n    return error;\r\n   });\r\n           \r\n}\r\n\r\n}\r\n\r\nexport default new ConfirmUserDetailsService()\r\n           \r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\n\r\nimport ApplnTxtInput from \"../lib/components/txtinput/ApplnTxtInput\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { AppDialog } from \"../lib/components/dialog/dialogBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ConfirmUserDetailsService from \"../service/ConfirmUserDetailsService\";\r\n\r\nconst ConfirmDetailsPopUp = (props) => {\r\n  const [formvalues, setFormvalues] = useState(null);\r\n  const [key, setKey] = useState(false);\r\n\r\n  const confirmDetailsForm = {\r\n    mobileNumber: props.userDetails.mobileNumber,\r\n    landLineNumber: props.userDetails.landLineNumber,\r\n    email: props.userDetails.email,\r\n    firstName: props.userDetails.firstName,\r\n    lastName: props.userDetails.lastName,\r\n  };\r\n\r\n  const schema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Please enter valid email \")\r\n      .required(\"Email is Required\"),\r\n    mobileNumber:Yup.string()\r\n    .required(\"Mobile Number is Required\")\r\n    .matches(\r\n      /^[+][0-9]\\d{11,11}$/,\r\n      \"Format must be +971xxxxxxxxx\"\r\n    ),\r\n    landLineNumber:Yup.string()\r\n    .required(\"Landline Number is Required\")\r\n    .matches(\r\n      /^[+][0-9]\\d{10,10}$/,\r\n      \"Format must be +971xxxxxxxx\"\r\n    ),\r\n    firstName:Yup.string().required(\"First name is required\"),\r\n    lastName:Yup.string().required(\"Last name is required\")\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\" IN popup\");\r\n    let obj = {};\r\n    if (props.userDetails) {\r\n      obj = {\r\n        mobileNumber: props.userDetails.mobileNumber,\r\n        landLineNumber: props.userDetails.landLineNumber,\r\n        email: props.userDetails.email,\r\n        firstName: props.userDetails.firstName,\r\n        lastName: props.userDetails.lastName,\r\n      };\r\n      setFormvalues(obj);\r\n      setKey(!key);\r\n      console.log(obj);\r\n    }\r\n\r\n    console.log(\"userDetails ....*****\",props.userDetails);\r\n  }, [props.userDetails]);\r\n\r\n  return formvalues ? (\r\n    <DataForm intialVals={formvalues} {...props} key={key} />\r\n  ) : (\r\n    <></>\r\n  );\r\n\r\n  function DataForm(props) {\r\n    const methods = useForm({\r\n      resolver: yupResolver(schema),\r\n      mode: \"onChange\",\r\n      reValidateMode: \"onChange\",\r\n      defaultValues: confirmDetailsForm,\r\n    });\r\n\r\n    const handleClose = () => {\r\n      methods.trigger();\r\n      console.log(\"inside close\");\r\n     \r\n    if( methods.formState.isValid === true)  \r\n       {\r\n        let values = methods.getValues();\r\n        values.encryptedUsername = props.userDetails.encryptedUsername;\r\n        values.activeCompanyCode = props.userDetails.activeCompanyCode;\r\n\r\n        ConfirmUserDetailsService.saveFormData(values)\r\n          .then((response) => {\r\n            if (response.isAxiosError) throw new Error(response.status);\r\n            else return response;\r\n          })\r\n          .then((response) => {})\r\n          .catch((error) => {\r\n            console.log(\"error\", error);\r\n          });\r\n\r\n        props.onClose(methods.getValues());\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <AppDialog\r\n          title=\"Confirm Details\"\r\n          closeTxt=\"Confirm\"\r\n          isopen={props.isopen}\r\n          onClose={handleClose}\r\n        >\r\n          <FormProvider {...methods}>\r\n            {\r\n              <form autoComplete=\"off\">\r\n                <p> Dear {props.userDetails.userName}</p>\r\n                <p>Welcome to DT Trucking</p>\r\n                <p>\r\n                  Kindly confirm your contact details to proceed with booking\r\n                </p>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md\">\r\n                    <ApplnTxtInput\r\n                      label=\"First name\"\r\n                      name={\"firstName\"}\r\n                      id={\"firstName\"}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md\">\r\n                    <ApplnTxtInput\r\n                      label=\"Last name\"\r\n                      name={\"lastName\"}\r\n                      id={\"lastName\"}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md\">\r\n                    <ApplnTxtInput\r\n                      label=\"Email\"\r\n                      name={\"email\"}\r\n                      id={\"email\"}\r\n                      fieldIcon=\"email\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md\">\r\n                    <ApplnTxtInput\r\n                      name={\"mobileNumber\"}\r\n                      id={\"mobileNumber\"}\r\n                      label={\"Mobile Number\"}\r\n                      helperText={\"'e.g. +971xxxxxxxxx'\"}\r\n                      fieldIcon=\"phone\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md\">\r\n                    <ApplnTxtInput\r\n                      name={\"landLineNumber\"}\r\n                      id={\"landLineNumber\"}\r\n                      label={\"Land Line Number\"}\r\n                      helperText={\"'e.g. +971xxxxxxxx'\"}\r\n                      fieldIcon=\"phone\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            }\r\n          </FormProvider>\r\n        </AppDialog>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default React.memo(ConfirmDetailsPopUp);\r\n","import store from \"../redux/store\"\r\nimport { showSpinner, hideSpinner, showMessageBar, hideMessageBar, updateBC } from \"../redux\";\r\n\r\n\r\nconst getStoreState = () => {\r\n    return store.getState();\r\n}\r\n\r\nconst invokeStoreMethod = (method) => {\r\n    store.dispatch(method);\r\n}\r\n\r\nexport const startLoading = () => {\r\n    invokeStoreMethod(showSpinner());\r\n\r\n}\r\n\r\nexport const endLoading = () => {\r\n    invokeStoreMethod(hideSpinner());\r\n}\r\n\r\nexport const displayMessageBar = (msg, type) => {\r\n    invokeStoreMethod(showMessageBar(msg, type));\r\n\r\n}\r\n\r\nexport const dismissMessageBar = () => {\r\n    invokeStoreMethod(hideMessageBar());\r\n\r\n}\r\n\r\nexport const updateBreadCrumb = (msg) => {\r\n    invokeStoreMethod(updateBC(msg))\r\n}\r\n\r\nexport const loginUser = () => {\r\n\r\n}\r\n\r\nexport const getLoginUserAccessToken = () => {\r\n    return getStoreState().loginUser.user.access_token;\r\n\r\n}\r\n\r\nexport const getUserDetails = () => {\r\n    return getStoreState().loginUser.user.userDetails;\r\n\r\n}\r\n\r\nexport const  getLoginUserType = () => {\r\n    return getStoreState().loginUser.user.user_type;\r\n\r\n}\r\n\r\n\r\nexport const refreshUser = () => {\r\n\r\n}","import React from 'react';\r\nimport { CircularProgress, Backdrop, LinearProgress, makeStyles } from '@material-ui/core';\r\nimport { showSpinner, hideSpinner } from '../../redux/spinner/spinActions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    spinner: {\r\n        zIndex: \"1000\",\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        width: \"100%\"\r\n    },\r\n    linearSpinner: {\r\n        zIndex: \"1500\",\r\n    }\r\n}));\r\n\r\n\r\nfunction Spinner({ loading }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <> {loading && loading === true &&\r\n            <div className={classes.spinner}>\r\n                <LinearProgress className={classes.linearSpinner} />\r\n                <Backdrop open={true} style={{ zIndex: 1000 }}>\r\n                    {/* <CircularProgress /> */}\r\n                </Backdrop>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.spinner.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showSpinner: () => dispatch(showSpinner()),\r\n        hideSpinner: () => dispatch(hideSpinner())\r\n    }\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps)(React.memo(Spinner));\r\n\r\n\r\n","import React from 'react';\r\nimport { Paper, Breadcrumbs, Link } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './breadcrumb.css';\r\n\r\nfunction AppBreadCrumb() {\r\n    const bc = useSelector(state => state.breadcrumb);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Paper>\r\n            <Breadcrumbs aria-label=\"breadcrumb\" className=\"breadCrumb\">\r\n                {\r\n                    bc.crumbs.map((crumb, i) => {\r\n                        return <Link color=\"inherit\" key={i}\r\n                            to={crumb.url}\r\n                            className={` ${crumb.active ? \"activeCrumb\" : \"\"}`}>\r\n                            {crumb.label}</Link>\r\n                    })\r\n                }\r\n            </Breadcrumbs>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppBreadCrumb);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    outer: {\r\n        padding: \"40px\"\r\n    },\r\n    level1: {\r\n        width: \"30%\"\r\n    },\r\n    level2: {\r\n        marginTop: \"20px\", marginBottom: \"20px\"\r\n    },\r\n    level3: {\r\n\r\n    }\r\n}));\r\n\r\nfunction AppSkeleton() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Container className={classes.outer}>\r\n                <Skeleton variant=\"text\" width=\"30%\" />\r\n                <Skeleton variant=\"rect\" className={classes.level2} animation=\"pulse\" width=\"100%\" height=\"100px\" />\r\n                <Skeleton variant=\"rect\" animation=\"wave\" width=\"100%\" height=\"400px\" />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppSkeleton);\r\n","import React, { Component } from 'react'\r\nimport AppSkeleton from '../components/spinner/AppSkeleton';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nconst lazyComponentLoad = (mycomponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            mycomponent()\r\n                .then(cmp => {\r\n                    this.setState({ component: cmp.default });\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : <><AppSkeleton /></>;\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default lazyComponentLoad;\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loginUser,confirmUserDetails } from '../redux';\r\n\r\n\r\nfunction AuthUser() {\r\n    const user = useSelector(state => state.loginUser.user);\r\n    const status = useSelector(state => state.loginUser.login);\r\n\r\n    console.log(\"login user auth....\");\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(loginUser());\r\n        console.log(\"login user auth....\")\r\n    }, [])\r\n\r\n    const refresh = () => {\r\n        console.log('refreshing');\r\n        dispatch(loginUser());\r\n    }\r\n    const handleTimer = () => {\r\n        let tim = setTimeout(() => {\r\n            refresh()\r\n        }, user.expires_in_seconds);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {status === true ? handleTimer()\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthUser\r\n","import React, { useEffect } from 'react';\nimport { Container, LinearProgress } from '@material-ui/core';\nimport Spinner from './lib/components/spinner/spinner';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport AppBreadCrumb from './lib/components/breadcrumb/appBreadCrumb';\nimport lazyComponentLoad from './lib/common/lazyComponentLoad';\nimport AuthUser from './lib/common/AuthUser';\nimport { useSelector } from 'react-redux';\nimport AppSkeleton from './lib/components/spinner/AppSkeleton';\nimport './App.css';\nimport Home from './components/Home';\n\n\nconst homeAsync = lazyComponentLoad(() => {\n  return import('./components/Home');\n});\n\nconst adminHomeAsync = lazyComponentLoad(() => {\n  return import('./components/AdminHome');\n});\n\n\nconst transporterHomeAsync = lazyComponentLoad(() => {\n  return import('./components/TransporterHome');\n});\n\nconst importerHomeAsync = lazyComponentLoad(() => {\n  return import('./components/ImporterHome');\n});\n\nconst tripAsync = lazyComponentLoad(() => {\n  return import('./components/Trip');\n});\n\nconst requestMainAsync = lazyComponentLoad(() => {\n  return import('./components/request/RequestMain');\n});\n\nconst assignTruckAndDriverAsync = lazyComponentLoad(() => {\n  return import('./components/AssignTruckAndDriver');\n});\n\nconst manageVehicleTypes = lazyComponentLoad(() => {\n  return import('./components/masters/ManageVehicleTypes');\n});\n\n\n// const addVehicles = lazyComponentLoad(() => {\n//   return import('./components/masters/AddVehicle');\n// });\n\nconst transporterAsync = lazyComponentLoad(() => {\n  return import('./components/masters/Transporter');\n});\n\n\nconst manageTruckAggregatorAsync = lazyComponentLoad(() => {\n  return import('./components/masters/ManageTruckAggregator');\n});\n\nconst manageDriverAsync = lazyComponentLoad(() => {\n  return import('./components/masters/ManageDriver');\n});\n\n\nconst viewRequestsForTransporter = lazyComponentLoad(() => {\n  return import('./components/ViewRequestsForTransporter');\n});\n\nconst testComponent = lazyComponentLoad(() => {\n  return import('./components/ContainerTest');\n});\n\n\nconst manageTrip = lazyComponentLoad(() => {\n  return import('./components/ManageTrip');\n});\n\nconst updateToken = lazyComponentLoad(() => {\n  return import('./components/masters/UpdateToken');\n});\n\nconst booking = lazyComponentLoad(() => {\n  return import('./components/request/Booking');\n});\n\nconst manageTruckAsync = lazyComponentLoad(() => {\n  return import('./components/masters/ManageTruck');\n});\n\nconst confirmDetails = lazyComponentLoad(() => {\n  return import('./components/ConfirmDetailsPopUp');\n});\n\nconst home = lazyComponentLoad(() => {\n  return import('./components/Home');\n});\n\nconst manageAddressAsync = lazyComponentLoad(() => {\n  return import('./components/address/AddAddress');\n});\n\nconst saveRequestAsync = lazyComponentLoad(() => {\n  return import('./components/request/SaveRequest');\n});\n\nconst confirmationAsync = lazyComponentLoad(() => {\n  return import('./components/request/Confirmation');\n});\n\nconst failConfirmationAsync = lazyComponentLoad(() => {\n  return import('./components/request/FailConfirm');\n});\n\nconst stepperAsync = lazyComponentLoad(() => {\n  return import('./components/request/RequestMain');\n});\n\nconst deliverContainerAsync = lazyComponentLoad(() => {\n  return import('./components/request/DeliverContainer');\n});\n\nconst selectLocationsAsync = lazyComponentLoad(() => {\n  return import('./components/request/SelectLocations');\n});\n\nconst testingAsync = lazyComponentLoad(() => {\n  return import('./components/request/Testing');\n});\n\nconst truckTypeAsync = lazyComponentLoad(() => {\n  return import('./components/request/TruckType');\n});\n\nconst transporterDashBoard = lazyComponentLoad(() => {\n  return import('./components/transporter/TransporterDashboard');\n});\n\nconst viewRequest = lazyComponentLoad(() => {\n  return import('./components/request/ViewRequest');\n});\nconst searchRequests = lazyComponentLoad(() => {\n  return import('./components/transporter/SearchRequests');\n});\n\n\nconst assignTrucks = lazyComponentLoad(() => {\n  return import('./components/transporter/AssignTrucks');\n});\n\nconst jobDetails = lazyComponentLoad(() => {\n  return import('./components/transporter/JobDetails');\n});\nconst assignDriver = lazyComponentLoad(() => {\n  return import('./components/transporter/AssignDriver');\n});\n\nconst jobDetailsCard = lazyComponentLoad(() => {\n  return import('./components/transporter/JobDetailsCard');\n});\nconst assignDriverSubForm = lazyComponentLoad(() => {\n  return import('./components/transporter/AssignDriverSubForm');\n});\n\nconst uploadDocument = lazyComponentLoad(() => {\n  return import('./components/transporter/UploadDocument');\n});\n\n\nconst myJobs = lazyComponentLoad(() => {\n  return import('./components/transporter/MyJobs');\n});\n\nconst settlements = lazyComponentLoad(() => {\n  return import('./components/transporter/Settlement');\n});\n\nconst settlementSummary = lazyComponentLoad(() => {\n  return import('./components/transporter/SettlementSummary');\n});\n\nconst claimSummary = lazyComponentLoad(() => {\n  return import('./components/transporter/ClaimSummary');\n});\n\nconst fileUpload = lazyComponentLoad(() => {\n  return import('./components/transporter/FileUpload');\n});\n\nconst assignTokentoJob = lazyComponentLoad(() => {\n  return import('./components/admin/AssignTokentoJob');\n});\n\nconst jobCard = lazyComponentLoad(() => {\n  return import('./components/admin/JobCard');\n});\n\n\n\nconst assignToken = lazyComponentLoad(() => {\n  return import('./components/admin/AssignToken');\n});\n\nconst adminDashBoard = lazyComponentLoad(() => {\n  return import('./components/admin/AdminDashBoard');\n});\n\nconst expiredJobs = lazyComponentLoad(() => {\n  return import('./components/admin/ExpiredJobs');\n});\nconst SearchDetails = lazyComponentLoad(() => {\n  return import('./components/admin/SearchDetails');\n});\n\nconst verifyDocument = lazyComponentLoad(() => {\n  return import('./components/admin/VerifyDocument');\n});\nconst assignTrucksForAdmin = lazyComponentLoad(() => {\n  return import('./components/admin/AssignTruckAdmin');\n});\n\nconst trucksAvailable = lazyComponentLoad(() => {\n  return import('./components/transporter/TrucksAvailable');\n});\n\n\nfunction App() {\n  const userLogin = useSelector(state => state.loginUser.login);\n\n\n  useEffect(() => {\n\n  }, [])\n  return (\n\n    <Router basename={\"/ptms\"}>\n      <div className=\"App\">\n\n        <AuthUser />\n        {userLogin === true ?\n          <Container>\n            <Home />\n            {/* <AppBreadCrumb /> */}\n            <Spinner />\n            <Switch>\n\n              <Route path=\"/adminHome\" exact component={adminHomeAsync} />\n              <Route path=\"/transporterHome\" exact component={transporterHomeAsync} />\n              <Route path=\"/importerHome\" exact component={importerHomeAsync} />\n\n              <Route path=\"/createTrip\" exact component={tripAsync} />\n              <Route path=\"/manageTransporter\" exact component={transporterAsync} />\n              <Route path=\"/requestMain\" exact component={requestMainAsync} />\n              <Route path=\"/addVehicleTypes\" exact component={manageVehicleTypes} />\n              <Route path=\"/assignTruckAndDriver\" exact component={assignTruckAndDriverAsync} />\n              <Route path=\"/manageTruckAggregator\" exact component={manageTruckAggregatorAsync} />\n              <Route path=\"/manageDriver\" exact component={manageDriverAsync} />\n              <Route path=\"/transporterTasks\" exact component={viewRequestsForTransporter} />\n              <Route path=\"/manageTrip\" exact component={manageTrip} />\n              <Route path=\"/myRequests\" exact component={booking} />\n              <Route path=\"/updateToken\" exact component={updateToken} />\n              <Route path=\"/manageTruck\" exact component={manageTruckAsync} />\n              <Route path=\"/confirmUserDetails\" exact component={confirmDetails} />\n\n              <Route path=\"/addAddress\" exact component={manageAddressAsync} />\n              <Route path=\"/saveRequest\" exact component={saveRequestAsync} />\n              <Route path=\"/confirmation/:referenceNumber\" exact component={confirmationAsync} />\n              <Route path=\"/failConfirm/:referenceNumber\" exact component={failConfirmationAsync} />\n              <Route path=\"/createRequest\" exact component={stepperAsync} />\n              <Route path=\"/deliverContainer\" exact component={deliverContainerAsync} />\n              <Route path=\"/selectLocations\" exact component={selectLocationsAsync} />\n              <Route path=\"/testing\" exact component={testingAsync} />\n              <Route path=\"/truckType\" exact component={truckTypeAsync} />\n              <Route path=\"/transporterDashboard\" exact component={transporterDashBoard} />\n              <Route path=\"/jobDetails\" exact component={jobDetails} />\n              <Route path=\"/viewRequest\" exact component={viewRequest} />\n              <Route path=\"/jobDetailsCard\" exact component={jobDetailsCard} />\n              <Route path=\"/jobDetails\" exact component={jobDetails} />\n              <Route path=\"/viewRequest\" exact component={viewRequest} />\n              <Route path=\"/jobDetailsCard\" exact component={jobDetailsCard} />\n              <Route path=\"/assignTrucks\" exact component={assignTrucks} />\n              <Route path=\"/uploadDocument\" exact component={uploadDocument} />\n              <Route path=\"/myJobs\" exact component={myJobs} />\n              <Route path=\"/assignTrucks\" exact component={assignTrucks} />\n              <Route path=\"/uploadDocument\" exact component={uploadDocument} />\n              <Route path=\"/myJobs\" exact component={myJobs} />\n              <Route path=\"/assignTrucks\" exact component={assignTrucks} />\n              <Route path=\"/searchRequests\" exact component={searchRequests} />\n              <Route path=\"/assignDriver\" exact component={assignDriver} />\n              <Route path=\"/assignDriverSubForm\" exact component={assignDriverSubForm} />\n              <Route path=\"/settlements\" exact component={settlements} />\n              <Route path=\"/settlementSummary\" exact component={settlementSummary} />\n              <Route path=\"/claimSummary\" exact component={claimSummary} />\n              <Route path=\"/fileUpload\" exact component={fileUpload} />\n              <Route path=\"/assignTokentoJob\" exact component={assignTokentoJob} />\n              <Route path=\"/jobCard\" exact component={jobCard} />\n\n              <Route path=\"/assignToken\" exact component={assignToken} />\n              <Route path=\"/fileUpload\" exact component={fileUpload} />\n              <Route path=\"/assignToken\" exact component={assignToken} />\n\n            \n              <Route path=\"/expiredJobs\" exact component={expiredJobs} />\n              <Route path=\"/verifyDocument\" exact component={verifyDocument} />\n              <Route path=\"/adminDashBoard\" exact component={adminDashBoard} />\n              <Route path=\"/expiredJobs\" exact component={expiredJobs} />\n              <Route path=\"/assignTruckAdmin\" exact component={assignTrucksForAdmin} />\n              <Route  path=\"/search-by-service\"  exact  render={(routeProps) => <SearchDetails {...routeProps} />} />\n              <Route path=\"/trucks\" exact component={trucksAvailable} />\n              \n\n            </Switch>\n          </Container >\n          : <AppSkeleton />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport store from './lib/redux/store';\nimport theme from './lib/common/theme/theme';\n\n\n\nReactDOM.render(\n  <>\n    \n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n       <CssBaseline />\n        <App />\n      </ThemeProvider>\n      {/* <AppSkeleton /> */}\n    </Provider>\n  </>\n  ,\n  document.getElementById('root')\n);","import { LOGIN_USER_SUCCESS, REFRESH_USER_SUCCESS } from \"./loginUserType\";\r\nimport { getHttp } from \"../../common/HttpService\";\r\nimport * as endpointContants from '../../../utils/ptmsEndpoints';\r\n\r\nexport const loginUserSuccess = (user) => {\r\n  return {\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const refreshUserSuccess = (user) => {\r\n  return {\r\n    type: REFRESH_USER_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const loginUser = () => {\r\n    return (dispatch) => {\r\n        // dispatch(fetchUserRequest);\r\n        const windowUrl = window.location.search;\r\n        const params = new URLSearchParams(windowUrl);\r\n        let agent_code=params.get('agent_code');\r\n        let agent_type=params.get('agent_type');\r\n        console.log(' Login User');\r\n        const remoteUrl = `/ptms/app/api/auth/getToken`;\r\n        getHttp({ url: remoteUrl,paramValues:{agentCode:agent_code,agentType:agent_type}}, false)\r\n            .then(response => {\r\n                // const users = response.data;\r\n                let user = { access_token: response.token, refresh_token: response.validity,user_type:response.userType};\r\n               dispatch(loginUserSuccess(user));\r\n               const remoteUrl =`${endpointContants.fetchConfirmDetailsPage}`;\r\n               let userDetails = {};\r\n               getHttp({ url: remoteUrl }, false)\r\n                    .then(response => {\r\n                    \r\n                      userDetails = response.data.dataItems[0];\r\n                      \r\n                      user.userDetails = userDetails;\r\n                      dispatch(loginUserSuccess(user));\r\n                })\r\n                .catch(error => {\r\n                    // const errMsg = error.message;\r\n                    // dispatch(fetchUserFailure(errMsg));\r\n                })\r\n                \r\n            })\r\n            .catch(error => {\r\n                // const errMsg = error.message;\r\n                // dispatch(fetchUserFailure(errMsg));\r\n            })\r\n    }\r\n}\r\n\r\nexport const loginWithAuthData = (obj) => {\r\n  return (dispatch) => {\r\n    let user = {\r\n      access_token: obj.access_token,\r\n      refresh_token: obj.refresh_token,\r\n    };\r\n    dispatch(loginUserSuccess(user));\r\n  };\r\n};\r\n","import { SHOW_MESSAGE_BAR, HIDE_MESSAGE_BAR } from \"./messagebarType\"\r\n\r\nexport const showMessageBar = (messages, type) => {\r\n    return {\r\n        type: SHOW_MESSAGE_BAR,\r\n        payload: messages,\r\n        messageType: type\r\n    }\r\n}\r\n\r\nexport const hideMessageBar = () => {\r\n    return {\r\n        type: HIDE_MESSAGE_BAR\r\n    }\r\n}\r\n\r\n","import { UPDATE_BC } from \"./breadCrumbType\"\r\n\r\nexport const updateBC = (num = 1) => {\r\n    return {\r\n        type: UPDATE_BC,\r\n        payload: num\r\n    }\r\n}\r\n\r\n","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE';"],"sourceRoot":""}